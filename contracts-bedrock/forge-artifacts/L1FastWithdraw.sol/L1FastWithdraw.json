{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEGACY_ERC20_ETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEGACY_l1token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLICY_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelFW",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossDomainMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "editFW",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_crossDomainMessenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2fastWithdraw",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_legacyERC20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1legacyERC20",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2fastWithdrawContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_saleCount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "provideFW",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506117fe806100206000396000f3fe60806040526004361061016e5760003560e01c80634c9b0c7d116100cb57806391d148541161007f578063d547741f11610059578063d547741f14610448578063f43b361314610468578063f8c8765e1461049557600080fd5b806391d14854146103e2578063926dd1b014610335578063a217fddf1461043357600080fd5b806370480275116100b0578063704802751461036e57806375829def1461038e57806375b238fc146103ae57600080fd5b80634c9b0c7d14610335578063609cd1fa1461034157600080fd5b80632ad0ad6f1161012257806336568abe1161010757806336568abe146102965780633fbe7fa4146102b657806342c66a881461030857600080fd5b80632ad0ad6f146102635780632f2ff15d1461027657600080fd5b8063229852461161015357806322985246146101d1578063248a9ca31461021357806324d7806c1461024357600080fd5b806301ffc9a71461017a5780631785f53c146101af57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a6101953660046113e2565b610525565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101cf6101ca36600461144d565b6105be565b005b3480156101dd57600080fd5b506102057ffb5864e8ff833c3cb2d2d08505e82ff02a43554c74a35d4f5a64e8526127831181565b6040519081526020016101a6565b34801561021f57600080fd5b5061020561022e366004611468565b60009081526020819052604090206001015490565b34801561024f57600080fd5b5061019a61025e36600461144d565b610685565b6101cf610271366004611481565b6106d2565b34801561028257600080fd5b506101cf6102913660046114e5565b610b71565b3480156102a257600080fd5b506101cf6102b13660046114e5565b610b9b565b3480156102c257600080fd5b506002546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a6565b34801561031457600080fd5b506004546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101cf57600080fd5b34801561034d57600080fd5b506003546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561037a57600080fd5b506101cf61038936600461144d565b610c4e565b34801561039a57600080fd5b506101cf6103a936600461144d565b610d0d565b3480156103ba57600080fd5b506102057fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b3480156103ee57600080fd5b5061019a6103fd3660046114e5565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561043f57600080fd5b50610205600081565b34801561045457600080fd5b506101cf6104633660046114e5565b610ef2565b34801561047457600080fd5b506001546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b3480156104a157600080fd5b506101cf6104b0366004611511565b6001805473ffffffffffffffffffffffffffffffffffffffff9586167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806105b857507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6105c733610685565b610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b9b565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f5cbfc8ee58ca47855df7bcf648dd304ddb6b932f9b87878bdf6318d7ec7ee5b7602052604081205460ff166105b8565b60405133602482015273ffffffffffffffffffffffffffffffffffffffff85166044820152606481018490526084810183905260609060a401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc97a7fdd0000000000000000000000000000000000000000000000000000000017905260045490915073ffffffffffffffffffffffffffffffffffffffff8088169116036108e3576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905273ffffffffffffffffffffffffffffffffffffffff8716906323b872dd906064016020604051808303816000875af115801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190611565565b506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820186905287169063a9059cbb906044016020604051808303816000875af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611565565b50610ad9565b60035473ffffffffffffffffffffffffffffffffffffffff808816911603610a385783341461096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f46573a20455448206e6565642073616d6520616d6f756e740000000000000000604482015260640161064f565b60008573ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d80600081146109c8576040519150601f19603f3d011682016040523d82523d6000602084013e6109cd565b606091505b50509050806108dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f636c61696d206661696c00000000000000000000000000000000000000000000604482015260640161064f565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8681166024830152604482018690528716906323b872dd906064016020604051808303816000875af1158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad79190611565565b505b6001546002546040517f3dbb202b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831692633dbb202b92610b379291169085908790600401611601565b600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b50505050505050505050565b600082815260208190526040902060010154610b8c81610f17565b610b968383610f21565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161064f565b610c4a8282611011565b5050565b610c5733610685565b610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e000000000000000000000000000000000000000000000000000000000000606482015260840161064f565b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b71565b610d1633610685565b610da2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e000000000000000000000000000000000000000000000000000000000000606482015260840161064f565b73ffffffffffffffffffffffffffffffffffffffff8116610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41636365737369626c653a207a65726f20616464726573730000000000000000604482015260640161064f565b73ffffffffffffffffffffffffffffffffffffffff81163303610e9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f41636365737369626c653a2073616d652061646d696e00000000000000000000604482015260640161064f565b610ec87fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b71565b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4233610b9b565b600082815260208190526040902060010154610f0d81610f17565b610b968383611011565b61068281336110c8565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610c4a5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610fb33390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610c4a5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610c4a5761111e8173ffffffffffffffffffffffffffffffffffffffff166014611198565b611129836020611198565b60405160200161113a929190611646565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261064f916004016116c7565b606060006111a7836002611709565b6111b2906002611746565b67ffffffffffffffff8111156111ca576111ca61175e565b6040519080825280601f01601f1916602001820160405280156111f4576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061122b5761122b61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061128e5761128e61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006112ca846002611709565b6112d5906001611746565b90505b6001811115611372577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106113165761131661178d565b1a60f81b82828151811061132c5761132c61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361136b816117bc565b90506112d8565b5083156113db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161064f565b9392505050565b6000602082840312156113f457600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146113db57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461144857600080fd5b919050565b60006020828403121561145f57600080fd5b6113db82611424565b60006020828403121561147a57600080fd5b5035919050565b600080600080600060a0868803121561149957600080fd5b6114a286611424565b94506114b060208701611424565b93506040860135925060608601359150608086013563ffffffff811681146114d757600080fd5b809150509295509295909350565b600080604083850312156114f857600080fd5b8235915061150860208401611424565b90509250929050565b6000806000806080858703121561152757600080fd5b61153085611424565b935061153e60208601611424565b925061154c60408601611424565b915061155a60608601611424565b905092959194509250565b60006020828403121561157757600080fd5b815180151581146113db57600080fd5b60005b838110156115a257818101518382015260200161158a565b838111156115b1576000848401525b50505050565b600081518084526115cf816020860160208601611587565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061163060608301856115b7565b905063ffffffff83166040830152949350505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161167e816017850160208801611587565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116bb816028840160208801611587565b01602801949350505050565b6020815260006113db60208301846115b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611741576117416116da565b500290565b60008219821115611759576117596116da565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816117cb576117cb6116da565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c634300080f000a",
    "sourceMap": "392:2151:6:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061016e5760003560e01c80634c9b0c7d116100cb57806391d148541161007f578063d547741f11610059578063d547741f14610448578063f43b361314610468578063f8c8765e1461049557600080fd5b806391d14854146103e2578063926dd1b014610335578063a217fddf1461043357600080fd5b806370480275116100b0578063704802751461036e57806375829def1461038e57806375b238fc146103ae57600080fd5b80634c9b0c7d14610335578063609cd1fa1461034157600080fd5b80632ad0ad6f1161012257806336568abe1161010757806336568abe146102965780633fbe7fa4146102b657806342c66a881461030857600080fd5b80632ad0ad6f146102635780632f2ff15d1461027657600080fd5b8063229852461161015357806322985246146101d1578063248a9ca31461021357806324d7806c1461024357600080fd5b806301ffc9a71461017a5780631785f53c146101af57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a6101953660046113e2565b610525565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101cf6101ca36600461144d565b6105be565b005b3480156101dd57600080fd5b506102057ffb5864e8ff833c3cb2d2d08505e82ff02a43554c74a35d4f5a64e8526127831181565b6040519081526020016101a6565b34801561021f57600080fd5b5061020561022e366004611468565b60009081526020819052604090206001015490565b34801561024f57600080fd5b5061019a61025e36600461144d565b610685565b6101cf610271366004611481565b6106d2565b34801561028257600080fd5b506101cf6102913660046114e5565b610b71565b3480156102a257600080fd5b506101cf6102b13660046114e5565b610b9b565b3480156102c257600080fd5b506002546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a6565b34801561031457600080fd5b506004546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101cf57600080fd5b34801561034d57600080fd5b506003546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561037a57600080fd5b506101cf61038936600461144d565b610c4e565b34801561039a57600080fd5b506101cf6103a936600461144d565b610d0d565b3480156103ba57600080fd5b506102057fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b3480156103ee57600080fd5b5061019a6103fd3660046114e5565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561043f57600080fd5b50610205600081565b34801561045457600080fd5b506101cf6104633660046114e5565b610ef2565b34801561047457600080fd5b506001546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b3480156104a157600080fd5b506101cf6104b0366004611511565b6001805473ffffffffffffffffffffffffffffffffffffffff9586167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806105b857507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6105c733610685565b610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b9b565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f5cbfc8ee58ca47855df7bcf648dd304ddb6b932f9b87878bdf6318d7ec7ee5b7602052604081205460ff166105b8565b60405133602482015273ffffffffffffffffffffffffffffffffffffffff85166044820152606481018490526084810183905260609060a401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc97a7fdd0000000000000000000000000000000000000000000000000000000017905260045490915073ffffffffffffffffffffffffffffffffffffffff8088169116036108e3576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905273ffffffffffffffffffffffffffffffffffffffff8716906323b872dd906064016020604051808303816000875af115801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190611565565b506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820186905287169063a9059cbb906044016020604051808303816000875af11580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611565565b50610ad9565b60035473ffffffffffffffffffffffffffffffffffffffff808816911603610a385783341461096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f46573a20455448206e6565642073616d6520616d6f756e740000000000000000604482015260640161064f565b60008573ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d80600081146109c8576040519150601f19603f3d011682016040523d82523d6000602084013e6109cd565b606091505b50509050806108dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f636c61696d206661696c00000000000000000000000000000000000000000000604482015260640161064f565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8681166024830152604482018690528716906323b872dd906064016020604051808303816000875af1158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad79190611565565b505b6001546002546040517f3dbb202b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831692633dbb202b92610b379291169085908790600401611601565b600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b50505050505050505050565b600082815260208190526040902060010154610b8c81610f17565b610b968383610f21565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161064f565b610c4a8282611011565b5050565b610c5733610685565b610ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e000000000000000000000000000000000000000000000000000000000000606482015260840161064f565b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b71565b610d1633610685565b610da2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e000000000000000000000000000000000000000000000000000000000000606482015260840161064f565b73ffffffffffffffffffffffffffffffffffffffff8116610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41636365737369626c653a207a65726f20616464726573730000000000000000604482015260640161064f565b73ffffffffffffffffffffffffffffffffffffffff81163303610e9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f41636365737369626c653a2073616d652061646d696e00000000000000000000604482015260640161064f565b610ec87fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610b71565b6106827fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4233610b9b565b600082815260208190526040902060010154610f0d81610f17565b610b968383611011565b61068281336110c8565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610c4a5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610fb33390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610c4a5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610c4a5761111e8173ffffffffffffffffffffffffffffffffffffffff166014611198565b611129836020611198565b60405160200161113a929190611646565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261064f916004016116c7565b606060006111a7836002611709565b6111b2906002611746565b67ffffffffffffffff8111156111ca576111ca61175e565b6040519080825280601f01601f1916602001820160405280156111f4576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061122b5761122b61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061128e5761128e61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006112ca846002611709565b6112d5906001611746565b90505b6001811115611372577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106113165761131661178d565b1a60f81b82828151811061132c5761132c61178d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361136b816117bc565b90506112d8565b5083156113db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161064f565b9392505050565b6000602082840312156113f457600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146113db57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461144857600080fd5b919050565b60006020828403121561145f57600080fd5b6113db82611424565b60006020828403121561147a57600080fd5b5035919050565b600080600080600060a0868803121561149957600080fd5b6114a286611424565b94506114b060208701611424565b93506040860135925060608601359150608086013563ffffffff811681146114d757600080fd5b809150509295509295909350565b600080604083850312156114f857600080fd5b8235915061150860208401611424565b90509250929050565b6000806000806080858703121561152757600080fd5b61153085611424565b935061153e60208601611424565b925061154c60408601611424565b915061155a60608601611424565b905092959194509250565b60006020828403121561157757600080fd5b815180151581146113db57600080fd5b60005b838110156115a257818101518382015260200161158a565b838111156115b1576000848401525b50505050565b600081518084526115cf816020860160208601611587565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061163060608301856115b7565b905063ffffffff83166040830152949350505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161167e816017850160208801611587565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116bb816028840160208801611587565b01602801949350505050565b6020815260006113db60208301846115b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611741576117416116da565b500290565b60008219821115611759576117596116da565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816117cb576117cb6116da565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c634300080f000a",
    "sourceMap": "392:2151:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;516:14:17;;509:22;491:41;;479:2;464:18;2606:202:0;;;;;;;;582:113:11;;;;;;;;;;-1:-1:-1;582:113:11;;;;;:::i;:::-;;:::i;:::-;;151:62:10;;;;;;;;;;;;189:24;151:62;;;;;1081:25:17;;;1069:2;1054:18;151:62:10;935:177:17;4391:129:0;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;1144:121:11;;;;;;;;;;-1:-1:-1;1144:121:11;;;;;:::i;:::-;;:::i;944:1476:6:-;;;;;;:::i;:::-;;:::i;4816:145:0:-;;;;;;;;;;-1:-1:-1;4816:145:0;;;;;:::i;:::-;;:::i;5925:214::-;;;;;;;;;;-1:-1:-1;5925:214:0;;;;;:::i;:::-;;:::i;141:37:7:-;;;;;;;;;;-1:-1:-1;141:37:7;;;;;;;;;;;2304:42:17;2292:55;;;2274:74;;2262:2;2247:18;141:37:7;2128:226:17;221:29:7;;;;;;;;;;-1:-1:-1;221:29:7;;;;;;;;2487:53:6;;;;;;;;;184:31:7;;;;;;;;;;-1:-1:-1;184:31:7;;;;;;;;401:107:11;;;;;;;;;;-1:-1:-1;401:107:11;;;;;:::i;:::-;;:::i;771:299::-;;;;;;;;;;-1:-1:-1;771:299:11;;;;;:::i;:::-;;:::i;90:55:10:-;;;;;;;;;;;;127:18;90:55;;2895:145:0;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;;;;2895:145;2027:49;;;;;;;;;;-1:-1:-1;2027:49:0;2072:4;2027:49;;5241:147;;;;;;;;;;-1:-1:-1;5241:147:0;;;;;:::i;:::-;;:::i;100:35:7:-;;;;;;;;;;-1:-1:-1;100:35:7;;;;;;;;499:372:6;;;;;;;;;;-1:-1:-1;499:372:6;;;;;:::i;:::-;688:20;:44;;;;;;;;;;;;;;742:22;:40;;;;;;;;;;;;;;;792:16;:31;;;;;;;;;;;;;;;833:14;:31;;;;;;;;;;;499:372;2606:202:0;2691:4;2714:47;;;2729:32;2714:47;;:87;;-1:-1:-1;952:25:4;937:40;;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;582:113:11:-;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;2975:2:17;249:66:11;;;2957:21:17;3014:2;2994:18;;;2987:30;3053:34;3033:18;;;3026:62;3124:4;3104:18;;;3097:32;3146:19;;249:66:11;;;;;;;;;655:33:::1;127:18:10;680:7:11;655:12;:33::i;:::-;582:113:::0;:::o;1144:121::-;3004:29:0;;;1207:4:11;3004:29:0;;;:12;;:29;:12;:29;;;;;1230:28:11;2895:145:0;944:1476:6;1236:162;;1316:10;1236:162;;;3468:34:17;3417:42;3538:15;;3518:18;;;3511:43;3570:18;;;3563:34;;;3613:18;;;3606:34;;;1195:20:6;;3379:19:17;;1236:162:6;;;;;;;;;;;;;;;;;;;;;;;;1645:14;;1236:162;;-1:-1:-1;1645:26:6;;;;:14;;:26;1641:611;;1717:65;;;;;1747:10;1717:65;;;3914:34:17;1767:4:6;3964:18:17;;;3957:43;4016:18;;;4009:34;;;1717:29:6;;;;;;3826:18:17;;1717:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1796:38:6;;;;;:25;4528:55:17;;;1796:38:6;;;4510:74:17;4600:18;;;4593:34;;;1796:25:6;;;;;4483:18:17;;1796:38:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1641:611;;;1855:16;;:28;;;;:16;;:28;1851:401;;1920:7;1907:9;:20;1899:57;;;;;;;4840:2:17;1899:57:6;;;4822:21:17;4879:2;4859:18;;;4852:30;4918:26;4898:18;;;4891:54;4962:18;;1899:57:6;4638:348:17;1899:57:6;2030:9;2053:3;2045:17;;2070:9;2045:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:55;;;2106:4;2098:27;;;;;;;5403:2:17;2098:27:6;;;5385:21:17;5442:2;5422:18;;;5415:30;5481:12;5461:18;;;5454:40;5511:18;;2098:27:6;5201:334:17;1851:401:6;2186:55;;;;;2216:10;2186:55;;;3914:34:17;2186:29:6;3984:15:17;;;3964:18;;;3957:43;4016:18;;;4009:34;;;2186:29:6;;;;;3826:18:17;;2186:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1851:401;2287:20;;2334:22;;2263:150;;;;;2287:20;;;;;2263:57;;:150;;2334:22;;;2370:7;;2391:12;;2263:150;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:1285;944:1476;;;;;:::o;4816:145:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6020:23;;;719:10:2;6020:23:0;6012:83;;;;;;;6754:2:17;6012:83:0;;;6736:21:17;6793:2;6773:18;;;6766:30;6832:34;6812:18;;;6805:62;6903:17;6883:18;;;6876:45;6938:19;;6012:83:0;6552:411:17;6012:83:0;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;401:107:11:-;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;2975:2:17;249:66:11;;;2957:21:17;3014:2;2994:18;;;2987:30;3053:34;3033:18;;;3026:62;3124:4;3104:18;;;3097:32;3146:19;;249:66:11;2773:398:17;249:66:11;471:30:::1;127:18:10;493:7:11;471:9;:30::i;771:299::-:0;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;2975:2:17;249:66:11;;;2957:21:17;3014:2;2994:18;;;2987:30;3053:34;3033:18;;;3026:62;3124:4;3104:18;;;3097:32;3146:19;;249:66:11;2773:398:17;249:66:11;857:22:::1;::::0;::::1;849:59;;;::::0;::::1;::::0;;7170:2:17;849:59:11::1;::::0;::::1;7152:21:17::0;7209:2;7189:18;;;7182:30;7248:26;7228:18;;;7221:54;7292:18;;849:59:11::1;6968:348:17::0;849:59:11::1;926:22;::::0;::::1;:10;:22:::0;918:57:::1;;;::::0;::::1;::::0;;7523:2:17;918:57:11::1;::::0;::::1;7505:21:17::0;7562:2;7542:18;;;7535:30;7601:24;7581:18;;;7574:52;7643:18;;918:57:11::1;7321:346:17::0;918:57:11::1;986:31;127:18:10;1008:8:11;986:9;:31::i;:::-;1027:36;127:18:10;1052:10:11;1027:12;:36::i;5241:147:0:-:0;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;3334:103::-:0;3400:30;3411:4;719:10:2;3400::0;:30::i;7474:233::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;:29;;;;;;;;;;:36;;;;7627:4;7595:36;;;7677:12;719:10:2;;640:96;7677:12:0;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7957:149;;;8031:5;7999:12;;;;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8055:40;719:10:2;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;3718:492::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3844:349;;;;;;;;:::i;1652:441:3:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:3;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1864:9:3;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1943:5;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;;;;;;;;;;-1:-1:-1;1979:1:3;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:3;;2000:55;;;;;;;10023:2:17;2000:55:3;;;10005:21:17;;;10042:18;;;10035:30;10101:34;10081:18;;;10074:62;10153:18;;2000:55:3;9821:356:17;2000:55:3;2079:6;1652:441;-1:-1:-1;;;1652:441:3:o;14:332:17:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:196;611:20;;671:42;660:54;;650:65;;640:93;;729:1;726;719:12;640:93;543:196;;;:::o;744:186::-;803:6;856:2;844:9;835:7;831:23;827:32;824:52;;;872:1;869;862:12;824:52;895:29;914:9;895:29;:::i;1117:180::-;1176:6;1229:2;1217:9;1208:7;1204:23;1200:32;1197:52;;;1245:1;1242;1235:12;1197:52;-1:-1:-1;1268:23:17;;1117:180;-1:-1:-1;1117:180:17:o;1302:562::-;1396:6;1404;1412;1420;1428;1481:3;1469:9;1460:7;1456:23;1452:33;1449:53;;;1498:1;1495;1488:12;1449:53;1521:29;1540:9;1521:29;:::i;:::-;1511:39;;1569:38;1603:2;1592:9;1588:18;1569:38;:::i;:::-;1559:48;;1654:2;1643:9;1639:18;1626:32;1616:42;;1705:2;1694:9;1690:18;1677:32;1667:42;;1759:3;1748:9;1744:19;1731:33;1804:10;1797:5;1793:22;1786:5;1783:33;1773:61;;1830:1;1827;1820:12;1773:61;1853:5;1843:15;;;1302:562;;;;;;;;:::o;1869:254::-;1937:6;1945;1998:2;1986:9;1977:7;1973:23;1969:32;1966:52;;;2014:1;2011;2004:12;1966:52;2050:9;2037:23;2027:33;;2079:38;2113:2;2102:9;2098:18;2079:38;:::i;:::-;2069:48;;1869:254;;;;;:::o;2359:409::-;2445:6;2453;2461;2469;2522:3;2510:9;2501:7;2497:23;2493:33;2490:53;;;2539:1;2536;2529:12;2490:53;2562:29;2581:9;2562:29;:::i;:::-;2552:39;;2610:38;2644:2;2633:9;2629:18;2610:38;:::i;:::-;2600:48;;2667:38;2701:2;2690:9;2686:18;2667:38;:::i;:::-;2657:48;;2724:38;2758:2;2747:9;2743:18;2724:38;:::i;:::-;2714:48;;2359:409;;;;;;;:::o;4054:277::-;4121:6;4174:2;4162:9;4153:7;4149:23;4145:32;4142:52;;;4190:1;4187;4180:12;4142:52;4222:9;4216:16;4275:5;4268:13;4261:21;4254:5;4251:32;4241:60;;4297:1;4294;4287:12;5540:258;5612:1;5622:113;5636:6;5633:1;5630:13;5622:113;;;5712:11;;;5706:18;5693:11;;;5686:39;5658:2;5651:10;5622:113;;;5753:6;5750:1;5747:13;5744:48;;;5788:1;5779:6;5774:3;5770:16;5763:27;5744:48;;5540:258;;;:::o;5803:316::-;5844:3;5882:5;5876:12;5909:6;5904:3;5897:19;5925:63;5981:6;5974:4;5969:3;5965:14;5958:4;5951:5;5947:16;5925:63;:::i;:::-;6033:2;6021:15;6038:66;6017:88;6008:98;;;;6108:4;6004:109;;5803:316;-1:-1:-1;;5803:316:17:o;6124:423::-;6337:42;6329:6;6325:55;6314:9;6307:74;6417:2;6412;6401:9;6397:18;6390:30;6288:4;6437:44;6477:2;6466:9;6462:18;6454:6;6437:44;:::i;:::-;6429:52;;6529:10;6521:6;6517:23;6512:2;6501:9;6497:18;6490:51;6124:423;;;;;;:::o;7672:786::-;8083:25;8078:3;8071:38;8053:3;8138:6;8132:13;8154:62;8209:6;8204:2;8199:3;8195:12;8188:4;8180:6;8176:17;8154:62;:::i;:::-;8280:19;8275:2;8235:16;;;8267:11;;;8260:40;8325:13;;8347:63;8325:13;8396:2;8388:11;;8381:4;8369:17;;8347:63;:::i;:::-;8430:17;8449:2;8426:26;;7672:786;-1:-1:-1;;;;7672:786:17:o;8463:219::-;8612:2;8601:9;8594:21;8575:4;8632:44;8672:2;8661:9;8657:18;8649:6;8632:44;:::i;8687:184::-;8739:77;8736:1;8729:88;8836:4;8833:1;8826:15;8860:4;8857:1;8850:15;8876:228;8916:7;9042:1;8974:66;8970:74;8967:1;8964:81;8959:1;8952:9;8945:17;8941:105;8938:131;;;9049:18;;:::i;:::-;-1:-1:-1;9089:9:17;;8876:228::o;9109:128::-;9149:3;9180:1;9176:6;9173:1;9170:13;9167:39;;;9186:18;;:::i;:::-;-1:-1:-1;9222:9:17;;9109:128::o;9242:184::-;9294:77;9291:1;9284:88;9391:4;9388:1;9381:15;9415:4;9412:1;9405:15;9431:184;9483:77;9480:1;9473:88;9580:4;9577:1;9570:15;9604:4;9601:1;9594:15;9620:196;9659:3;9687:5;9677:39;;9696:18;;:::i;:::-;-1:-1:-1;9743:66:17;9732:78;;9620:196::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_ROLE()": "75b238fc",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "LEGACY_ERC20_ETH()": "609cd1fa",
    "LEGACY_l1token()": "42c66a88",
    "POLICY_ROLE()": "22985246",
    "addAdmin(address)": "70480275",
    "cancelFW()": "926dd1b0",
    "crossDomainMessenger()": "f43b3613",
    "editFW()": "4c9b0c7d",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,address,address)": "f8c8765e",
    "isAdmin(address)": "24d7806c",
    "l2fastWithdrawContract()": "3fbe7fa4",
    "provideFW(address,address,uint256,uint256,uint32)": "2ad0ad6f",
    "removeAdmin(address)": "1785f53c",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAdmin(address)": "75829def"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGACY_ERC20_ETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGACY_l1token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLICY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelFW\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"editFW\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_crossDomainMessenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2fastWithdraw\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_legacyERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1legacyERC20\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2fastWithdrawContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleCount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"provideFW\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"add admin\",\"params\":{\"account\":\"address to add\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"details\":\"whether admin\",\"params\":{\"account\":\"address to check\"}},\"removeAdmin(address)\":{\"details\":\"remove admin\",\"params\":{\"account\":\"address to remove\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferAdmin(address)\":{\"details\":\"transfer admin\",\"params\":{\"newAdmin\":\"new admin address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/L1FastWithdraw.sol\":\"L1FastWithdraw\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/L1/L1FastWithdraw.sol\":{\"keccak256\":\"0xa7877795ed11d79050f29ec9e80d891299c853e464fd0a7752d29a82014b17c5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c57462d19bd9f2b7ae62a3df248539a359be2597b52ec2d6a1cafee43d8085ad\",\"dweb:/ipfs/QmQK4MQjB4YeCahv8SZHnBg1HLKAwtL7wdYdtnQySdbFPr\"]},\"src/L1/L1FastWithdrawStorage.sol\":{\"keccak256\":\"0xecf9e97530358d81f76a88ba8413fec68d7f8a32fe8705bbb55865d9478f9890\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7c2d5fca283a552b457f7779a9f87582c8168e257f70ba821684a4f13ae311ac\",\"dweb:/ipfs/QmcxhWjoVE6Ykz877WGs77xTUpYFpeSVz32NsCEN99V3Fx\"]},\"src/common/AccessRoleCommon.sol\":{\"keccak256\":\"0xcdd2dcbdf96134ffff98d7637a8bb0efd18c03d7c4697e6a1da4157a6aec6293\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e8d40177c57ad9b312c6e2ee0408bbc25f405f1b36056580949086e55a31c7\",\"dweb:/ipfs/QmZa1mxeGPcmSSxbJtvUTSFaYg3paAFhmmf9dZ44PRJN6J\"]},\"src/common/AccessibleCommon.sol\":{\"keccak256\":\"0x5dc1423a2eae20cb7bd05da7ce63733489fbf58a9e7893039c2e88991c4c9760\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0733e0099198bd28ec341c493f74ad29fb8673ee085e54902345ba1b7bb202a\",\"dweb:/ipfs/QmQwBksv4oCaThyoR7y1u8XZdyjhdZkAeD7gahfcig3Uvw\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4dfcbed37adf9f54e4544d13382814f51c9ef5d52ca4277d2080f988857f3b23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d5912aefaae898fe23ca62fcacbe89a04ce456b06a13e735f8e6174ea3dd59e\",\"dweb:/ipfs/QmcmKRNAtnBVFADpf5mjuq6e6rLgYLjUMHaRkn3YY3mdtG\"]},\"src/interfaces/IL1CrossDomainMessenger.sol\":{\"keccak256\":\"0x79edb75aaab514aed4568636ef079d34ea5e426b818ec6ac7aa908dfdc16bece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64bbf604929261f74ade04fb139d4019e585330262071a39a794bfafa19f3010\",\"dweb:/ipfs/QmTub9YkdjaTWPKyF2Uk2vSP5TGfu8cJujPtKEimVFGo8t\"]},\"src/interfaces/IL2FastWithdraw.sol\":{\"keccak256\":\"0x744db19a4e48ee60774a5e8b62512a716653869daee9285c459aaed06adc52db\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://98333ed259310cff42cfc3755c7368e127394e265f0390752ff699916d8cb9cb\",\"dweb:/ipfs/QmSS9wozVE8hsqmJHAsaj53XqLcrPsawsgPmecJLZYAABh\"]},\"src/libraries/SafeERC20.sol\":{\"keccak256\":\"0x778abe92595c692abcf3bec8b72f4491746626d1a057c76b97c8d1a7d759f7b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://466b8a5fae532ca4fc34bff92b0f23f3abe6689f5dbbb1aeb6ef2351c00e1f54\",\"dweb:/ipfs/QmZr7LTTXLdDzfoAJtbKFfCDLmq4hX9r2dycDiEMdzk2Wk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEGACY_ERC20_ETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEGACY_l1token",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLICY_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelFW"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crossDomainMessenger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "editFW"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_crossDomainMessenger",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2fastWithdraw",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_legacyERC20",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l1legacyERC20",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2fastWithdrawContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_saleCount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "provideFW"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAdmin(address)": {
            "details": "add admin",
            "params": {
              "account": "address to add"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isAdmin(address)": {
            "details": "whether admin",
            "params": {
              "account": "address to check"
            }
          },
          "removeAdmin(address)": {
            "details": "remove admin",
            "params": {
              "account": "address to remove"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferAdmin(address)": {
            "details": "transfer admin",
            "params": {
              "newAdmin": "new admin address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L1/L1FastWithdraw.sol": "L1FastWithdraw"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724",
        "urls": [
          "bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5",
          "dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/L1/L1FastWithdraw.sol": {
        "keccak256": "0xa7877795ed11d79050f29ec9e80d891299c853e464fd0a7752d29a82014b17c5",
        "urls": [
          "bzz-raw://c57462d19bd9f2b7ae62a3df248539a359be2597b52ec2d6a1cafee43d8085ad",
          "dweb:/ipfs/QmQK4MQjB4YeCahv8SZHnBg1HLKAwtL7wdYdtnQySdbFPr"
        ],
        "license": "Unlicense"
      },
      "src/L1/L1FastWithdrawStorage.sol": {
        "keccak256": "0xecf9e97530358d81f76a88ba8413fec68d7f8a32fe8705bbb55865d9478f9890",
        "urls": [
          "bzz-raw://7c2d5fca283a552b457f7779a9f87582c8168e257f70ba821684a4f13ae311ac",
          "dweb:/ipfs/QmcxhWjoVE6Ykz877WGs77xTUpYFpeSVz32NsCEN99V3Fx"
        ],
        "license": "Unlicense"
      },
      "src/common/AccessRoleCommon.sol": {
        "keccak256": "0xcdd2dcbdf96134ffff98d7637a8bb0efd18c03d7c4697e6a1da4157a6aec6293",
        "urls": [
          "bzz-raw://06e8d40177c57ad9b312c6e2ee0408bbc25f405f1b36056580949086e55a31c7",
          "dweb:/ipfs/QmZa1mxeGPcmSSxbJtvUTSFaYg3paAFhmmf9dZ44PRJN6J"
        ],
        "license": "MIT"
      },
      "src/common/AccessibleCommon.sol": {
        "keccak256": "0x5dc1423a2eae20cb7bd05da7ce63733489fbf58a9e7893039c2e88991c4c9760",
        "urls": [
          "bzz-raw://c0733e0099198bd28ec341c493f74ad29fb8673ee085e54902345ba1b7bb202a",
          "dweb:/ipfs/QmQwBksv4oCaThyoR7y1u8XZdyjhdZkAeD7gahfcig3Uvw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x4dfcbed37adf9f54e4544d13382814f51c9ef5d52ca4277d2080f988857f3b23",
        "urls": [
          "bzz-raw://0d5912aefaae898fe23ca62fcacbe89a04ce456b06a13e735f8e6174ea3dd59e",
          "dweb:/ipfs/QmcmKRNAtnBVFADpf5mjuq6e6rLgYLjUMHaRkn3YY3mdtG"
        ],
        "license": "MIT"
      },
      "src/interfaces/IL1CrossDomainMessenger.sol": {
        "keccak256": "0x79edb75aaab514aed4568636ef079d34ea5e426b818ec6ac7aa908dfdc16bece",
        "urls": [
          "bzz-raw://64bbf604929261f74ade04fb139d4019e585330262071a39a794bfafa19f3010",
          "dweb:/ipfs/QmTub9YkdjaTWPKyF2Uk2vSP5TGfu8cJujPtKEimVFGo8t"
        ],
        "license": "MIT"
      },
      "src/interfaces/IL2FastWithdraw.sol": {
        "keccak256": "0x744db19a4e48ee60774a5e8b62512a716653869daee9285c459aaed06adc52db",
        "urls": [
          "bzz-raw://98333ed259310cff42cfc3755c7368e127394e265f0390752ff699916d8cb9cb",
          "dweb:/ipfs/QmSS9wozVE8hsqmJHAsaj53XqLcrPsawsgPmecJLZYAABh"
        ],
        "license": "Unlicense"
      },
      "src/libraries/SafeERC20.sol": {
        "keccak256": "0x778abe92595c692abcf3bec8b72f4491746626d1a057c76b97c8d1a7d759f7b0",
        "urls": [
          "bzz-raw://466b8a5fae532ca4fc34bff92b0f23f3abe6689f5dbbb1aeb6ef2351c00e1f54",
          "dweb:/ipfs/QmZr7LTTXLdDzfoAJtbKFfCDLmq4hX9r2dycDiEMdzk2Wk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
      },
      {
        "astId": 858,
        "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
        "label": "crossDomainMessenger",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 860,
        "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
        "label": "l2fastWithdrawContract",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 862,
        "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
        "label": "LEGACY_ERC20_ETH",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 864,
        "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
        "label": "LEGACY_l1token",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)19_storage"
      },
      "t_struct(RoleData)19_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 16,
            "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 18,
            "contract": "src/L1/L1FastWithdraw.sol:L1FastWithdraw",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "details": "add admin",
        "params": {
          "account": "address to add"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isAdmin(address)": {
        "details": "whether admin",
        "params": {
          "account": "address to check"
        }
      },
      "removeAdmin(address)": {
        "details": "remove admin",
        "params": {
          "account": "address to remove"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferAdmin(address)": {
        "details": "transfer admin",
        "params": {
          "newAdmin": "new admin address"
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L1/L1FastWithdraw.sol",
    "id": 855,
    "exportedSymbols": {
      "AccessibleCommon": [
        1383
      ],
      "IERC20": [
        1470
      ],
      "IL1CrossDomainMessenger": [
        1493
      ],
      "IL2FastWithdraw": [
        1507
      ],
      "L1FastWithdraw": [
        854
      ],
      "L1FastWithdrawStorage": [
        865
      ],
      "SafeERC20": [
        1743
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:2506:6",
    "nodes": [
      {
        "id": 678,
        "nodeType": "PragmaDirective",
        "src": "38:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 679,
        "nodeType": "ImportDirective",
        "src": "63:36:6",
        "nodes": [],
        "absolutePath": "src/libraries/SafeERC20.sol",
        "file": "../libraries/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 855,
        "sourceUnit": 1744,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 681,
        "nodeType": "ImportDirective",
        "src": "101:68:6",
        "nodes": [],
        "absolutePath": "src/interfaces/IL2FastWithdraw.sol",
        "file": "../interfaces/IL2FastWithdraw.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 855,
        "sourceUnit": 1508,
        "symbolAliases": [
          {
            "foreign": {
              "id": 680,
              "name": "IL2FastWithdraw",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1507,
              "src": "110:15:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 683,
        "nodeType": "ImportDirective",
        "src": "170:84:6",
        "nodes": [],
        "absolutePath": "src/interfaces/IL1CrossDomainMessenger.sol",
        "file": "../interfaces/IL1CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 855,
        "sourceUnit": 1494,
        "symbolAliases": [
          {
            "foreign": {
              "id": 682,
              "name": "IL1CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1493,
              "src": "179:23:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 685,
        "nodeType": "ImportDirective",
        "src": "255:66:6",
        "nodes": [],
        "absolutePath": "src/common/AccessibleCommon.sol",
        "file": "../common/AccessibleCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 855,
        "sourceUnit": 1384,
        "symbolAliases": [
          {
            "foreign": {
              "id": 684,
              "name": "AccessibleCommon",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1383,
              "src": "264:16:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 687,
        "nodeType": "ImportDirective",
        "src": "322:68:6",
        "nodes": [],
        "absolutePath": "src/L1/L1FastWithdrawStorage.sol",
        "file": "./L1FastWithdrawStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 855,
        "sourceUnit": 866,
        "symbolAliases": [
          {
            "foreign": {
              "id": 686,
              "name": "L1FastWithdrawStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 865,
              "src": "331:21:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 854,
        "nodeType": "ContractDefinition",
        "src": "392:2151:6",
        "nodes": [
          {
            "id": 695,
            "nodeType": "UsingForDirective",
            "src": "466:27:6",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 692,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1743,
              "src": "472:9:6"
            },
            "typeName": {
              "id": 694,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 693,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1470,
                "src": "486:6:6"
              },
              "referencedDeclaration": 1470,
              "src": "486:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1470",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 723,
            "nodeType": "FunctionDefinition",
            "src": "499:372:6",
            "nodes": [],
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "678:193:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 706,
                      "name": "crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "688:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "_crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 697,
                      "src": "711:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "688:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "688:44:6"
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 710,
                      "name": "l2fastWithdrawContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "742:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 711,
                      "name": "_l2fastWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "767:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "742:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "742:40:6"
                },
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 714,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "792:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 715,
                      "name": "_legacyERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "811:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "792:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "792:31:6"
                },
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 718,
                      "name": "LEGACY_l1token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "833:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 719,
                      "name": "_l1legacyERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "850:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "833:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "833:31:6"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "508:10:6",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "_crossDomainMessenger",
                  "nameLocation": "536:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "528:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "_l2fastWithdraw",
                  "nameLocation": "575:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "567:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_legacyERC20",
                  "nameLocation": "608:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "600:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_l1legacyERC20",
                  "nameLocation": "638:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "630:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:140:6"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:6"
            },
            "scope": 854,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 727,
            "nodeType": "FunctionDefinition",
            "src": "903:35:6",
            "nodes": [],
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "930:8:6",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:6"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:6"
            },
            "scope": 854,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 845,
            "nodeType": "FunctionDefinition",
            "src": "944:1476:6",
            "nodes": [],
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "1135:1285:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1208:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "1195:20:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1195:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 742,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1195:20:6"
                },
                {
                  "expression": {
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 743,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "1226:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "636c61696d465728616464726573732c616464726573732c75696e743235362c75696e7432353629",
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1260:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c97a7fdd1a16d74c705e9f5b150d836e367a0ada895cac207021ddd6a688296d",
                            "typeString": "literal_string \"claimFW(address,address,uint256,uint256)\""
                          },
                          "value": "claimFW(address,address,uint256,uint256)"
                        },
                        {
                          "expression": {
                            "id": 747,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1316:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1316:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 749,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "1340:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 750,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "1357:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 751,
                          "name": "_saleCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "1378:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c97a7fdd1a16d74c705e9f5b150d836e367a0ada895cac207021ddd6a688296d",
                            "typeString": "literal_string \"claimFW(address,address,uint256,uint256)\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 744,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1236:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeWithSignature",
                        "nodeType": "MemberAccess",
                        "src": "1236:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes memory)"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1236:162:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1226:172:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:172:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 755,
                      "name": "LEGACY_l1token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "1645:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 756,
                      "name": "_l1token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "1663:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1645:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 780,
                        "name": "LEGACY_ERC20_ETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "1855:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 781,
                        "name": "_l1token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "1875:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1855:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 832,
                      "nodeType": "Block",
                      "src": "2142:110:6",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 826,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2216:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2216:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 828,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "2228:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 829,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "2233:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 823,
                                    "name": "_l1token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 729,
                                    "src": "2193:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 822,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1470,
                                  "src": "2186:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1470_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2186:16:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1470",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1435,
                              "src": "2186:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2186:55:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 831,
                          "nodeType": "ExpressionStatement",
                          "src": "2186:55:6"
                        }
                      ]
                    },
                    "id": 833,
                    "nodeType": "IfStatement",
                    "src": "1851:401:6",
                    "trueBody": {
                      "id": 821,
                      "nodeType": "Block",
                      "src": "1885:251:6",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 784,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1907:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "1907:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 786,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 733,
                                  "src": "1920:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1907:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "46573a20455448206e6565642073616d6520616d6f756e74",
                                "id": 788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1929:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_234174e00f3e8b322e487a0cb34a77d6fdb3d0c9004501c558b7bee01bef781e",
                                  "typeString": "literal_string \"FW: ETH need same amount\""
                                },
                                "value": "FW: ETH need same amount"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_234174e00f3e8b322e487a0cb34a77d6fdb3d0c9004501c558b7bee01bef781e",
                                  "typeString": "literal_string \"FW: ETH need same amount\""
                                }
                              ],
                              "id": 783,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "1899:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1899:57:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 790,
                          "nodeType": "ExpressionStatement",
                          "src": "1899:57:6"
                        },
                        {
                          "expression": {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 795,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1986:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_L1FastWithdraw_$854",
                                          "typeString": "contract L1FastWithdraw"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_L1FastWithdraw_$854",
                                          "typeString": "contract L1FastWithdraw"
                                        }
                                      ],
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1978:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 793,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1978:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1978:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1970:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 791,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1970:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1970:22:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1970:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 799,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2005:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2005:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1970:45:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 802,
                          "nodeType": "ExpressionStatement",
                          "src": "1970:45:6"
                        },
                        {
                          "assignments": [
                            804,
                            null
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 804,
                              "mutability": "mutable",
                              "name": "sent",
                              "nameLocation": "2035:4:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 821,
                              "src": "2030:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "typeName": {
                                "id": 803,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "2030:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "visibility": "internal"
                            },
                            null
                          ],
                          "id": 815,
                          "initialValue": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2081:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 807,
                                      "name": "_to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 731,
                                      "src": "2053:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2045:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 805,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2045:8:6",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2045:12:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "2045:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "expression": {
                                    "id": 810,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2070:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "2070:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2045:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2045:39:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2029:55:6"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 817,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 804,
                                "src": "2106:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "636c61696d206661696c",
                                "id": 818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2112:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_717cb9bd42d781c204a231b096b0db4b6af48f9ebed95cbe6abe46b7107fdda9",
                                  "typeString": "literal_string \"claim fail\""
                                },
                                "value": "claim fail"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_717cb9bd42d781c204a231b096b0db4b6af48f9ebed95cbe6abe46b7107fdda9",
                                  "typeString": "literal_string \"claim fail\""
                                }
                              ],
                              "id": 816,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "2098:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2098:27:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 820,
                          "nodeType": "ExpressionStatement",
                          "src": "2098:27:6"
                        }
                      ]
                    }
                  },
                  "id": 834,
                  "nodeType": "IfStatement",
                  "src": "1641:611:6",
                  "trueBody": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "1673:172:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 762,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1747:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1747:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 766,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1767:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_L1FastWithdraw_$854",
                                    "typeString": "contract L1FastWithdraw"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_L1FastWithdraw_$854",
                                    "typeString": "contract L1FastWithdraw"
                                  }
                                ],
                                "id": 765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1759:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 764,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1759:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1759:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 768,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "1774:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 759,
                                  "name": "_l1token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 729,
                                  "src": "1724:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 758,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1470,
                                "src": "1717:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1470_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1717:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1470",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1435,
                            "src": "1717:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1717:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "1717:65:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 775,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "1822:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 776,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "1826:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 772,
                                  "name": "_l1token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 729,
                                  "src": "1803:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 771,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1470,
                                "src": "1796:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1470_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1796:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1470",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1406,
                            "src": "1796:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1796:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "1796:38:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "l2fastWithdrawContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "2334:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 840,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "2370:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 841,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "2391:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 836,
                            "name": "crossDomainMessenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "2287:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 835,
                          "name": "IL1CrossDomainMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "2263:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IL1CrossDomainMessenger_$1493_$",
                            "typeString": "type(contract IL1CrossDomainMessenger)"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2263:45:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IL1CrossDomainMessenger_$1493",
                          "typeString": "contract IL1CrossDomainMessenger"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1492,
                      "src": "2263:57:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:150:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:150:6"
                }
              ]
            },
            "functionSelector": "2ad0ad6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideFW",
            "nameLocation": "953:9:6",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "_l1token",
                  "nameLocation": "980:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "972:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1006:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "998:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1027:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1019:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_saleCount",
                  "nameLocation": "1052:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1044:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "1079:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1072:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "962:135:6"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:6"
            },
            "scope": 854,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 849,
            "nodeType": "FunctionDefinition",
            "src": "2426:55:6",
            "nodes": [],
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "2473:8:6",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "926dd1b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelFW",
            "nameLocation": "2435:8:6",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:8:6"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2473:0:6"
            },
            "scope": 854,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 853,
            "nodeType": "FunctionDefinition",
            "src": "2487:53:6",
            "nodes": [],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "2532:8:6",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "4c9b0c7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "editFW",
            "nameLocation": "2496:6:6",
            "parameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2502:8:6"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:0:6"
            },
            "scope": 854,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 688,
              "name": "AccessibleCommon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1383,
              "src": "419:16:6"
            },
            "id": 689,
            "nodeType": "InheritanceSpecifier",
            "src": "419:16:6"
          },
          {
            "baseName": {
              "id": 690,
              "name": "L1FastWithdrawStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 865,
              "src": "437:21:6"
            },
            "id": 691,
            "nodeType": "InheritanceSpecifier",
            "src": "437:21:6"
          }
        ],
        "canonicalName": "L1FastWithdraw",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          854,
          865,
          1383,
          319,
          664,
          676,
          392,
          414,
          1282
        ],
        "name": "L1FastWithdraw",
        "nameLocation": "401:14:6",
        "scope": 855,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 6
}