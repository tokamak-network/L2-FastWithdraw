{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEGACY_ERC20_ETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEGACY_l1token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLICY_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salecount",
          "type": "uint256"
        }
      ],
      "name": "cancelFW",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_saleCount",
          "type": "uint256"
        }
      ],
      "name": "claimFW",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossDomainMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dealData",
      "outputs": [
        {
          "internalType": "address",
          "name": "l2token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fwAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2token",
          "type": "address"
        }
      ],
      "name": "getL1token",
      "outputs": [
        {
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_crossDomainMessenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1fastWithdraw",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_legacyERC20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1legacyERC20",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1fastWithdrawContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fwAmount",
          "type": "uint256"
        }
      ],
      "name": "requestFW",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salecount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "377:4239:6:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061018b5760003560e01c806370480275116100d6578063c97a7fdd1161007f578063f43b361311610059578063f43b3613146104ce578063f5869c2f146104fb578063f8c8765e146105a657600080fd5b8063c97a7fdd14610485578063d547741f14610498578063e338e655146104b857600080fd5b806391d14854116100b057806391d148541461040c5780639beb4fe51461045d578063a217fddf1461047057600080fd5b8063704802751461039857806375829def146103b857806375b238fc146103d857600080fd5b80632f2ff15d1161013857806342e51d741161011257806342e51d741461031e578063609cd1fa1461034b57806362d1c9761461037857600080fd5b80632f2ff15d1461028c57806336568abe146102ac57806342c66a88146102cc57600080fd5b8063229852461161016957806322985246146101fa578063248a9ca31461023c57806324d7806c1461026c57600080fd5b806301d0d8151461019057806301ffc9a7146101a55780631785f53c146101da575b600080fd5b6101a361019e366004611a99565b610636565b005b3480156101b157600080fd5b506101c56101c0366004611ace565b6108c5565b60405190151581526020015b60405180910390f35b3480156101e657600080fd5b506101a36101f5366004611b10565b61095e565b34801561020657600080fd5b5061022e7ffb5864e8ff833c3cb2d2d08505e82ff02a43554c74a35d4f5a64e8526127831181565b6040519081526020016101d1565b34801561024857600080fd5b5061022e610257366004611b2d565b60009081526020819052604090206001015490565b34801561027857600080fd5b506101c5610287366004611b10565b610a20565b34801561029857600080fd5b506101a36102a7366004611b46565b610a6d565b3480156102b857600080fd5b506101a36102c7366004611b46565b610a97565b3480156102d857600080fd5b506004546102f99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d1565b34801561032a57600080fd5b506002546102f99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035757600080fd5b506003546102f99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561038457600080fd5b506102f9610393366004611b10565b610b4a565b3480156103a457600080fd5b506101a36103b3366004611b10565b610bfd565b3480156103c457600080fd5b506101a36103d3366004611b10565b610cbc565b3480156103e457600080fd5b5061022e7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b34801561041857600080fd5b506101c5610427366004611b46565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101a361046b366004611b2d565b610ea1565b34801561047c57600080fd5b5061022e600081565b6101a3610493366004611b76565b611110565b3480156104a457600080fd5b506101a36104b3366004611b46565b61141e565b3480156104c457600080fd5b5061022e60055481565b3480156104da57600080fd5b506001546102f99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561050757600080fd5b50610560610516366004611b2d565b6006602052600090815260409020805460018201546002830154600384015460049094015473ffffffffffffffffffffffffffffffffffffffff9384169492841693909116919085565b6040805173ffffffffffffffffffffffffffffffffffffffff9687168152948616602086015292909416918301919091526060820152608081019190915260a0016101d1565b3480156105b257600080fd5b506101a36105c1366004611bbc565b6001805473ffffffffffffffffffffffffffffffffffffffff9586167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b333b156106ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4c3246573a2066756e6374696f6e2063616e206f6e6c792062652063616c6c6560448201527f642066726f6d20616e20454f410000000000000000000000000000000000000060648201526084015b60405180910390fd5b6005600081546106d990611c47565b9091555060035473ffffffffffffffffffffffffffffffffffffffff9081169084160361076e57813414610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f46573a206e6174697665544f4e206e65656420616d6f756e740000000000000060448201526064016106c1565b61080d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff8416906323b872dd906064016020604051808303816000875af11580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b9190611c7f565b505b6040805160a08101825273ffffffffffffffffffffffffffffffffffffffff9485168152336020808301918252600083850181815260608501978852608085019687526005548252600690925293909320915182549087167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617835590516001830180549188169183169190911790559151600282018054919096169216919091179093559051600383015551600490910155565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061095857507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b61096733610a20565b6109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084016106c1565b610a1d7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610a97565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f5cbfc8ee58ca47855df7bcf648dd304ddb6b932f9b87878bdf6318d7ec7ee5b7602052604081205460ff16610958565b600082815260208190526040902060010154610a8881611443565b610a92838361144d565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016106c1565b610b46828261153d565b5050565b60035460009073ffffffffffffffffffffffffffffffffffffffff90811690831603610b8e57505060045473ffffffffffffffffffffffffffffffffffffffff1690565b8173ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611ca1565b610c0633610a20565b610c92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084016106c1565b610a1d7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610a6d565b610cc533610a20565b610d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f41636365737369626c653a2043616c6c6572206973206e6f7420616e2061646d60448201527f696e00000000000000000000000000000000000000000000000000000000000060648201526084016106c1565b73ffffffffffffffffffffffffffffffffffffffff8116610dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41636365737369626c653a207a65726f2061646472657373000000000000000060448201526064016106c1565b73ffffffffffffffffffffffffffffffffffffffff81163303610e4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f41636365737369626c653a2073616d652061646d696e0000000000000000000060448201526064016106c1565b610e777fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4282610a6d565b610a1d7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4233610a97565b6000818152600660205260409020600281015460019091015473ffffffffffffffffffffffffffffffffffffffff9081169116148015610ef05750600081815260066020526040902060040154155b610f56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c7265616479206265656e20736f6c6400000000000000000000000000000060448201526064016106c1565b60008181526006602052604090206001015473ffffffffffffffffffffffffffffffffffffffff163314610fe6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f796f7572206e6f742073656c6c6572000000000000000000000000000000000060448201526064016106c1565b60035460008281526006602052604090205473ffffffffffffffffffffffffffffffffffffffff9182169116036110d7576000818152600660205260408082206003015490513391908381818185875af1925050503d8060008114611067576040519150601f19603f3d011682016040523d82523d6000602084013e61106c565b606091505b5050905080610b46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f63616e63656c20726566756e64206661696c000000000000000000000000000060448201526064016106c1565b600081815260066020526040902060038101549054610a1d9173ffffffffffffffffffffffffffffffffffffffff9091169033906115f4565b60008181526006602052604090206001015473ffffffffffffffffffffffffffffffffffffffff8481169116146111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6e6f74206d61746368207468652073656c6c657200000000000000000000000060448201526064016106c1565b60008181526006602052604090206004015482101561121e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e65656420746f206f766572206d696e416d6f756e740000000000000000000060448201526064016106c1565b60008181526006602052604090206002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff878116919091179091556004820184905560035491549181169116036113655760008181526006602052604080822060030154905173ffffffffffffffffffffffffffffffffffffffff871691908381818185875af1925050503d80600081146112ef576040519150601f19603f3d011682016040523d82523d6000602084013e6112f4565b606091505b505090508061135f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f636c61696d206661696c0000000000000000000000000000000000000000000060448201526064016106c1565b50611418565b60008181526006602052604090819020805460039091015491517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152602482019390935291169063a9059cbb906044016020604051808303816000875af11580156113f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114169190611c7f565b505b50505050565b60008281526020819052604090206001015461143981611443565b610a92838361153d565b610a1d813361175d565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b465760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556114df3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b465760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161168b9190611cea565b6000604051808303816000865af19150503d80600081146116c8576040519150601f19603f3d011682016040523d82523d6000602084013e6116cd565b606091505b50915091508180156116f75750805115806116f75750808060200190518101906116f79190611c7f565b611416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106c1565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b46576117b38173ffffffffffffffffffffffffffffffffffffffff16601461182d565b6117be83602061182d565b6040516020016117cf929190611d06565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526106c191600401611d87565b6060600061183c836002611dd8565b611847906002611e15565b67ffffffffffffffff81111561185f5761185f611e2d565b6040519080825280601f01601f191660200182016040528015611889576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106118c0576118c0611e5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061192357611923611e5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061195f846002611dd8565b61196a906001611e15565b90505b6001811115611a07577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106119ab576119ab611e5c565b1a60f81b8282815181106119c1576119c1611e5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611a0081611e8b565b905061196d565b508315611a70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c1565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a1d57600080fd5b600080600060608486031215611aae57600080fd5b8335611ab981611a77565b95602085013595506040909401359392505050565b600060208284031215611ae057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a7057600080fd5b600060208284031215611b2257600080fd5b8135611a7081611a77565b600060208284031215611b3f57600080fd5b5035919050565b60008060408385031215611b5957600080fd5b823591506020830135611b6b81611a77565b809150509250929050565b60008060008060808587031215611b8c57600080fd5b8435611b9781611a77565b93506020850135611ba781611a77565b93969395505050506040820135916060013590565b60008060008060808587031215611bd257600080fd5b8435611bdd81611a77565b93506020850135611bed81611a77565b92506040850135611bfd81611a77565b91506060850135611c0d81611a77565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7857611c78611c18565b5060010190565b600060208284031215611c9157600080fd5b81518015158114611a7057600080fd5b600060208284031215611cb357600080fd5b8151611a7081611a77565b60005b83811015611cd9578181015183820152602001611cc1565b838111156114185750506000910152565b60008251611cfc818460208701611cbe565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611d3e816017850160208801611cbe565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611d7b816028840160208801611cbe565b01602801949350505050565b6020815260008251806020840152611da6816040850160208701611cbe565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e1057611e10611c18565b500290565b60008219821115611e2857611e28611c18565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081611e9a57611e9a611c18565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c634300080f000a",
    "sourceMap": "377:4239:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:864;;;;;;:::i;:::-;;:::i;:::-;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;1063:14:13;;1056:22;1038:41;;1026:2;1011:18;2606:202:0;;;;;;;;582:113:9;;;;;;;;;;-1:-1:-1;582:113:9;;;;;:::i;:::-;;:::i;151:62:8:-;;;;;;;;;;;;189:24;151:62;;;;;1488:25:13;;;1476:2;1461:18;151:62:8;1342:177:13;4391:129:0;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;1144:121:9;;;;;;;;;;-1:-1:-1;1144:121:9;;;;;:::i;:::-;;:::i;4816:145:0:-;;;;;;;;;;-1:-1:-1;4816:145:0;;;;;:::i;:::-;;:::i;5925:214::-;;;;;;;;;;-1:-1:-1;5925:214:0;;;;;:::i;:::-;;:::i;386:29:7:-;;;;;;;;;;-1:-1:-1;386:29:7;;;;;;;;;;;2205:42:13;2193:55;;;2175:74;;2163:2;2148:18;386:29:7;2029:226:13;306:37:7;;;;;;;;;;-1:-1:-1;306:37:7;;;;;;;;349:31;;;;;;;;;;-1:-1:-1;349:31:7;;;;;;;;4149:314:6;;;;;;;;;;-1:-1:-1;4149:314:6;;;;;:::i;:::-;;:::i;401:107:9:-;;;;;;;;;;-1:-1:-1;401:107:9;;;;;:::i;:::-;;:::i;771:299::-;;;;;;;;;;-1:-1:-1;771:299:9;;;;;:::i;:::-;;:::i;90:55:8:-;;;;;;;;;;;;127:18;90:55;;2895:145:0;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;;;;2895:145;3476:667:6;;;;;;:::i;:::-;;:::i;2027:49:0:-;;;;;;;;;;-1:-1:-1;2027:49:0;2072:4;2027:49;;2473:997:6;;;;;;:::i;:::-;;:::i;5241:147:0:-;;;;;;;;;;-1:-1:-1;5241:147:0;;;;;:::i;:::-;;:::i;423:24:7:-;;;;;;;;;;;;;;;;265:35;;;;;;;;;;-1:-1:-1;265:35:7;;;;;;;;454:47;;;;;;;;;;-1:-1:-1;454:47:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3426:42:13;3495:15;;;3477:34;;3547:15;;;3542:2;3527:18;;3520:43;3599:15;;;;3579:18;;;3572:43;;;;3646:2;3631:18;;3624:34;3689:3;3674:19;;3667:35;;;;3403:3;3388:19;454:47:7;3157:551:13;682:372:6;;;;;;;;;;-1:-1:-1;682:372:6;;;;;:::i;:::-;871:20;:44;;;;;;;;;;;;;;925:22;:40;;;;;;;;;;;;;;;975:16;:31;;;;;;;;;;;;;;;1016:14;:31;;;;;;;;;;;682:372;1603:864;565:10;4584:19;:23;544:82;;;;;;;4591:2:13;544:82:6;;;4573:21:13;4630:2;4610:18;;;4603:30;4669:34;4649:18;;;4642:62;4740:15;4720:18;;;4713:43;4773:19;;544:82:6;;;;;;;;;1903:9:::1;;1901:11;;;;;:::i;:::-;::::0;;;-1:-1:-1;1939:16:6::1;::::0;::::1;::::0;;::::1;1927:28:::0;;::::1;::::0;1923:310:::1;;1992:12;1979:9;:25;1971:63;;;::::0;::::1;::::0;;5394:2:13;1971:63:6::1;::::0;::::1;5376:21:13::0;5433:2;5413:18;;;5406:30;5472:27;5452:18;;;5445:55;5517:18;;1971:63:6::1;5192:349:13::0;1971:63:6::1;1923:310;;;2154:68;::::0;;;;2184:10:::1;2154:68;::::0;::::1;5809:34:13::0;2203:4:6::1;5859:18:13::0;;;5852:43;5911:18;;;5904:34;;;2154:29:6::1;::::0;::::1;::::0;::::1;::::0;5721:18:13;;2154:68:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1923:310;2265:195;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;2333:10:::1;2265:195;::::0;;::::1;::::0;;;-1:-1:-1;2265:195:6;;;;;;;;;;;;;;;;;;2252:9:::1;::::0;2243:19;;:8:::1;:19:::0;;;;;;;:217;;;;;;::::1;::::0;;;::::1;;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;1603:864::o;2606:202:0:-;2691:4;2714:47;;;2729:32;2714:47;;:87;;-1:-1:-1;952:25:4;937:40;;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;582:113:9:-;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;6433:2:13;249:66:9;;;6415:21:13;6472:2;6452:18;;;6445:30;6511:34;6491:18;;;6484:62;6582:4;6562:18;;;6555:32;6604:19;;249:66:9;6231:398:13;249:66:9;655:33:::1;127:18:8;680:7:9;655:12;:33::i;:::-;582:113:::0;:::o;1144:121::-;3004:29:0;;;1207:4:9;3004:29:0;;;:12;;:29;:12;:29;;;;;1230:28:9;2895:145:0;4816;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6020:23;;;719:10:2;6020:23:0;6012:83;;;;;;;6836:2:13;6012:83:0;;;6818:21:13;6875:2;6855:18;;;6848:30;6914:34;6894:18;;;6887:62;6985:17;6965:18;;;6958:45;7020:19;;6012:83:0;6634:411:13;6012:83:0;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;4149:314:6:-;4295:16;;4248:15;;4295:16;;;;4283:28;;;;4279:178;;-1:-1:-1;;4344:14:6;;;;;4149:314::o;4279:178::-;4427:8;4406:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;401:107:9:-;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;6433:2:13;249:66:9;;;6415:21:13;6472:2;6452:18;;;6445:30;6511:34;6491:18;;;6484:62;6582:4;6562:18;;;6555:32;6604:19;;249:66:9;6231:398:13;249:66:9;471:30:::1;127:18:8;493:7:9;471:9;:30::i;771:299::-:0;257:19;265:10;257:7;:19::i;:::-;249:66;;;;;;;6433:2:13;249:66:9;;;6415:21:13;6472:2;6452:18;;;6445:30;6511:34;6491:18;;;6484:62;6582:4;6562:18;;;6555:32;6604:19;;249:66:9;6231:398:13;249:66:9;857:22:::1;::::0;::::1;849:59;;;::::0;::::1;::::0;;7508:2:13;849:59:9::1;::::0;::::1;7490:21:13::0;7547:2;7527:18;;;7520:30;7586:26;7566:18;;;7559:54;7630:18;;849:59:9::1;7306:348:13::0;849:59:9::1;926:22;::::0;::::1;:10;:22:::0;918:57:::1;;;::::0;::::1;::::0;;7861:2:13;918:57:9::1;::::0;::::1;7843:21:13::0;7900:2;7880:18;;;7873:30;7939:24;7919:18;;;7912:52;7981:18;;918:57:9::1;7659:346:13::0;918:57:9::1;986:31;127:18:8;1008:8:9;986:9;:31::i;:::-;1027:36;127:18:8;1052:10:9;1027:12;:36::i;3476:667:6:-:0;3617:20;;;;:8;:20;;;;;:29;;;;;3583:30;;;;3617:29;3583:30;;;3617:29;;3583:63;:101;;;;-1:-1:-1;3650:20:6;;;;:8;:20;;;;;:29;;;:34;3583:101;3575:131;;;;;;;8212:2:13;3575:131:6;;;8194:21:13;8251:2;8231:18;;;8224:30;8290:19;8270:18;;;8263:47;8327:18;;3575:131:6;8010:341:13;3575:131:6;3724:20;;;;:8;:20;;;;;:30;;;:44;:30;3758:10;3724:44;3716:72;;;;;;;8558:2:13;3716:72:6;;;8540:21:13;8597:2;8577:18;;;8570:30;8636:17;8616:18;;;8609:45;8671:18;;3716:72:6;8356:339:13;3716:72:6;3835:16;;;3803:20;;;:8;:20;;;;;:28;3835:16;;;;3803:28;;:48;3799:338;;3868:9;3915:20;;;:8;:20;;;;;;:32;;;3883:69;;3891:10;;3915:32;3868:9;3883:69;3868:9;3883:69;3915:32;3891:10;3883:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3867:85;;;3974:4;3966:35;;;;;;;9112:2:13;3966:35:6;;;9094:21:13;9151:2;9131:18;;;9124:30;9190:20;9170:18;;;9163:48;9228:18;;3966:35:6;8910:342:13;3799:338:6;4093:20;;;;:8;:20;;;;;:32;;;;4039:28;;4032:94;;4039:28;;;;;4082:10;;4032:49;:94::i;2473:997::-;2700:20;;;;:8;:20;;;;;:30;;;:37;;;;:30;;:37;2692:70;;;;;;;9459:2:13;2692:70:6;;;9441:21:13;9498:2;9478:18;;;9471:30;9537:22;9517:18;;;9510:50;9577:18;;2692:70:6;9257:344:13;2692:70:6;2780:20;;;;:8;:20;;;;;:29;;;:40;-1:-1:-1;2780:40:6;2772:75;;;;;;;9808:2:13;2772:75:6;;;9790:21:13;9847:2;9827:18;;;9820:30;9886:24;9866:18;;;9859:52;9928:18;;2772:75:6;9606:346:13;2772:75:6;2857:20;;;;:8;:20;;;;;:29;;;:37;;;;;;;;;;;;;;;2904:29;;;:39;;;2989:16;;2957:28;;2989:16;;;2957:28;;:48;2954:510;;3022:9;3064:20;;;:8;:20;;;;;;:32;;;3037:64;;:19;;;;3064:32;3022:9;3037:64;3022:9;3037:64;3064:32;3037:19;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3021:80;;;3123:4;3115:27;;;;;;;10159:2:13;3115:27:6;;;10141:21:13;10198:2;10178:18;;;10171:30;10237:12;10217:18;;;10210:40;10267:18;;3115:27:6;9957:334:13;3115:27:6;3007:146;2954:510;;;3375:20;;;;:8;:20;;;;;;;:28;;3420:32;;;;;3368:85;;;;;3375:28;10488:55:13;;;3368:85:6;;;10470:74:13;10560:18;;;10553:34;;;;3375:28:6;;;3368:45;;10443:18:13;;3368:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2954:510;2473:997;;;;:::o;5241:147:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;3334:103::-:0;3400:30;3411:4;719:10:2;3400::0;:30::i;7474:233::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;:29;;;;;;;;;;:36;;;;7627:4;7595:36;;;7677:12;719:10:2;;640:96;7677:12:0;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;7878:234::-;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;7957:149;;;8031:5;7999:12;;;;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8055:40;719:10:2;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;792:355:12:-;974:60;;;941:19;10488:55:13;;;974:60:12;;;10470:74:13;10560:18;;;;10553:34;;;974:60:12;;;;;;;;;;10443:18:13;;;;974:60:12;;;;;;;;;997:24;974:60;;;941:103;;-1:-1:-1;;;;941:19:12;;;;:103;;974:60;941:103;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:139;;;;1063:7;:57;;;;-1:-1:-1;1075:11:12;;:16;;:44;;;1106:4;1095:24;;;;;;;;;;;;:::i;:::-;1055:85;;;;;;;11342:2:13;1055:85:12;;;11324:21:13;11381:2;11361:18;;;11354:30;11420:17;11400:18;;;11393:45;11455:18;;1055:85:12;11140:339:13;3718:492:0;2981:4;3004:12;;;;;;;;;;;:29;;;;;;;;;;;;;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3844:349;;;;;;;;:::i;1652:441:3:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:3;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1864:9:3;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1943:5;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;;;;;;;;;;-1:-1:-1;1979:1:3;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:3;;2000:55;;;;;;;13869:2:13;2000:55:3;;;13851:21:13;;;13888:18;;;13881:30;13947:34;13927:18;;;13920:62;13999:18;;2000:55:3;13667:356:13;2000:55:3;2079:6;1652:441;-1:-1:-1;;;1652:441:3:o;14:154:13:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:383;250:6;258;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;374:9;361:23;393:31;418:5;393:31;:::i;:::-;443:5;495:2;480:18;;467:32;;-1:-1:-1;546:2:13;531:18;;;518:32;;173:383;-1:-1:-1;;;173:383:13:o;561:332::-;619:6;672:2;660:9;651:7;647:23;643:32;640:52;;;688:1;685;678:12;640:52;727:9;714:23;777:66;770:5;766:78;759:5;756:89;746:117;;859:1;856;849:12;1090:247;1149:6;1202:2;1190:9;1181:7;1177:23;1173:32;1170:52;;;1218:1;1215;1208:12;1170:52;1257:9;1244:23;1276:31;1301:5;1276:31;:::i;1524:180::-;1583:6;1636:2;1624:9;1615:7;1611:23;1607:32;1604:52;;;1652:1;1649;1642:12;1604:52;-1:-1:-1;1675:23:13;;1524:180;-1:-1:-1;1524:180:13:o;1709:315::-;1777:6;1785;1838:2;1826:9;1817:7;1813:23;1809:32;1806:52;;;1854:1;1851;1844:12;1806:52;1890:9;1877:23;1867:33;;1950:2;1939:9;1935:18;1922:32;1963:31;1988:5;1963:31;:::i;:::-;2013:5;2003:15;;;1709:315;;;;;:::o;2445:525::-;2531:6;2539;2547;2555;2608:3;2596:9;2587:7;2583:23;2579:33;2576:53;;;2625:1;2622;2615:12;2576:53;2664:9;2651:23;2683:31;2708:5;2683:31;:::i;:::-;2733:5;-1:-1:-1;2790:2:13;2775:18;;2762:32;2803:33;2762:32;2803:33;:::i;:::-;2445:525;;2855:7;;-1:-1:-1;;;;2909:2:13;2894:18;;2881:32;;2960:2;2945:18;2932:32;;2445:525::o;3713:671::-;3799:6;3807;3815;3823;3876:3;3864:9;3855:7;3851:23;3847:33;3844:53;;;3893:1;3890;3883:12;3844:53;3932:9;3919:23;3951:31;3976:5;3951:31;:::i;:::-;4001:5;-1:-1:-1;4058:2:13;4043:18;;4030:32;4071:33;4030:32;4071:33;:::i;:::-;4123:7;-1:-1:-1;4182:2:13;4167:18;;4154:32;4195:33;4154:32;4195:33;:::i;:::-;4247:7;-1:-1:-1;4306:2:13;4291:18;;4278:32;4319:33;4278:32;4319:33;:::i;:::-;3713:671;;;;-1:-1:-1;3713:671:13;;-1:-1:-1;;3713:671:13:o;4803:184::-;4855:77;4852:1;4845:88;4952:4;4949:1;4942:15;4976:4;4973:1;4966:15;4992:195;5031:3;5062:66;5055:5;5052:77;5049:103;;5132:18;;:::i;:::-;-1:-1:-1;5179:1:13;5168:13;;4992:195::o;5949:277::-;6016:6;6069:2;6057:9;6048:7;6044:23;6040:32;6037:52;;;6085:1;6082;6075:12;6037:52;6117:9;6111:16;6170:5;6163:13;6156:21;6149:5;6146:32;6136:60;;6192:1;6189;6182:12;7050:251;7120:6;7173:2;7161:9;7152:7;7148:23;7144:32;7141:52;;;7189:1;7186;7179:12;7141:52;7221:9;7215:16;7240:31;7265:5;7240:31;:::i;10598:258::-;10670:1;10680:113;10694:6;10691:1;10688:13;10680:113;;;10770:11;;;10764:18;10751:11;;;10744:39;10716:2;10709:10;10680:113;;;10811:6;10808:1;10805:13;10802:48;;;-1:-1:-1;;10846:1:13;10828:16;;10821:27;10598:258::o;10861:274::-;10990:3;11028:6;11022:13;11044:53;11090:6;11085:3;11078:4;11070:6;11066:17;11044:53;:::i;:::-;11113:16;;;;;10861:274;-1:-1:-1;;10861:274:13:o;11484:786::-;11895:25;11890:3;11883:38;11865:3;11950:6;11944:13;11966:62;12021:6;12016:2;12011:3;12007:12;12000:4;11992:6;11988:17;11966:62;:::i;:::-;12092:19;12087:2;12047:16;;;12079:11;;;12072:40;12137:13;;12159:63;12137:13;12208:2;12200:11;;12193:4;12181:17;;12159:63;:::i;:::-;12242:17;12261:2;12238:26;;11484:786;-1:-1:-1;;;;11484:786:13:o;12275:442::-;12424:2;12413:9;12406:21;12387:4;12456:6;12450:13;12499:6;12494:2;12483:9;12479:18;12472:34;12515:66;12574:6;12569:2;12558:9;12554:18;12549:2;12541:6;12537:15;12515:66;:::i;:::-;12633:2;12621:15;12638:66;12617:88;12602:104;;;;12708:2;12598:113;;12275:442;-1:-1:-1;;12275:442:13:o;12722:228::-;12762:7;12888:1;12820:66;12816:74;12813:1;12810:81;12805:1;12798:9;12791:17;12787:105;12784:131;;;12895:18;;:::i;:::-;-1:-1:-1;12935:9:13;;12722:228::o;12955:128::-;12995:3;13026:1;13022:6;13019:1;13016:13;13013:39;;;13032:18;;:::i;:::-;-1:-1:-1;13068:9:13;;12955:128::o;13088:184::-;13140:77;13137:1;13130:88;13237:4;13234:1;13227:15;13261:4;13258:1;13251:15;13277:184;13329:77;13326:1;13319:88;13426:4;13423:1;13416:15;13450:4;13447:1;13440:15;13466:196;13505:3;13533:5;13523:39;;13542:18;;:::i;:::-;-1:-1:-1;13589:66:13;13578:78;;13466:196::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_ROLE()": "75b238fc",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "LEGACY_ERC20_ETH()": "609cd1fa",
    "LEGACY_l1token()": "42c66a88",
    "POLICY_ROLE()": "22985246",
    "addAdmin(address)": "70480275",
    "cancelFW(uint256)": "9beb4fe5",
    "claimFW(address,address,uint256,uint256)": "c97a7fdd",
    "crossDomainMessenger()": "f43b3613",
    "dealData(uint256)": "f5869c2f",
    "getL1token(address)": "62d1c976",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,address,address)": "f8c8765e",
    "isAdmin(address)": "24d7806c",
    "l1fastWithdrawContract()": "42e51d74",
    "removeAdmin(address)": "1785f53c",
    "renounceRole(bytes32,address)": "36568abe",
    "requestFW(address,uint256,uint256)": "01d0d815",
    "revokeRole(bytes32,address)": "d547741f",
    "salecount()": "e338e655",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAdmin(address)": "75829def"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGACY_ERC20_ETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEGACY_l1token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLICY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_salecount\",\"type\":\"uint256\"}],\"name\":\"cancelFW\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleCount\",\"type\":\"uint256\"}],\"name\":\"claimFW\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dealData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"l2token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fwAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2token\",\"type\":\"address\"}],\"name\":\"getL1token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_crossDomainMessenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1fastWithdraw\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_legacyERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1legacyERC20\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1fastWithdrawContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fwAmount\",\"type\":\"uint256\"}],\"name\":\"requestFW\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salecount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"add admin\",\"params\":{\"account\":\"address to add\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"details\":\"whether admin\",\"params\":{\"account\":\"address to check\"}},\"removeAdmin(address)\":{\"details\":\"remove admin\",\"params\":{\"account\":\"address to remove\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferAdmin(address)\":{\"details\":\"transfer admin\",\"params\":{\"newAdmin\":\"new admin address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L2/L2FastWithdraw.sol\":\"L2FastWithdraw\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/L2/L2FastWithdraw.sol\":{\"keccak256\":\"0xaa31fb79c3e9a04c339cb2ef220f3bb15df25ba5bfa7910d7216aaefe5317115\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://08a274af190f420d3949f199b3e99b75ccac4ed3c29f4b10dcb72b4bc2b1b41a\",\"dweb:/ipfs/QmUUcMaXgY2Hf31qmRC4FDqhS4SU4QkXg19NmQUTHg9Eqj\"]},\"src/L2/L2FastWithdrawStorage.sol\":{\"keccak256\":\"0xe46bacf3ff3fd1ca8ba75ca904f2bfc9b9975dffb4acb9403cf6d03758b3f80a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://13fe32311a1e1912c5566850a0773d460289eba3604444ac1679f67c3aa1c5a1\",\"dweb:/ipfs/QmbaYaGcER9Pjn8swPD4UeJf35ieHjxSzYSycbC35thV4A\"]},\"src/common/AccessRoleCommon.sol\":{\"keccak256\":\"0xcdd2dcbdf96134ffff98d7637a8bb0efd18c03d7c4697e6a1da4157a6aec6293\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e8d40177c57ad9b312c6e2ee0408bbc25f405f1b36056580949086e55a31c7\",\"dweb:/ipfs/QmZa1mxeGPcmSSxbJtvUTSFaYg3paAFhmmf9dZ44PRJN6J\"]},\"src/common/AccessibleCommon.sol\":{\"keccak256\":\"0x5dc1423a2eae20cb7bd05da7ce63733489fbf58a9e7893039c2e88991c4c9760\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0733e0099198bd28ec341c493f74ad29fb8673ee085e54902345ba1b7bb202a\",\"dweb:/ipfs/QmQwBksv4oCaThyoR7y1u8XZdyjhdZkAeD7gahfcig3Uvw\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4dfcbed37adf9f54e4544d13382814f51c9ef5d52ca4277d2080f988857f3b23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d5912aefaae898fe23ca62fcacbe89a04ce456b06a13e735f8e6174ea3dd59e\",\"dweb:/ipfs/QmcmKRNAtnBVFADpf5mjuq6e6rLgYLjUMHaRkn3YY3mdtG\"]},\"src/interfaces/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/libraries/SafeERC20.sol\":{\"keccak256\":\"0x778abe92595c692abcf3bec8b72f4491746626d1a057c76b97c8d1a7d759f7b0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://466b8a5fae532ca4fc34bff92b0f23f3abe6689f5dbbb1aeb6ef2351c00e1f54\",\"dweb:/ipfs/QmZr7LTTXLdDzfoAJtbKFfCDLmq4hX9r2dycDiEMdzk2Wk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEGACY_ERC20_ETH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEGACY_l1token",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLICY_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_salecount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelFW"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_saleCount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claimFW"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crossDomainMessenger",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dealData",
          "outputs": [
            {
              "internalType": "address",
              "name": "l2token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fwAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getL1token",
          "outputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_crossDomainMessenger",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l1fastWithdraw",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_legacyERC20",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l1legacyERC20",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1fastWithdrawContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_fwAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "requestFW"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "salecount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAdmin(address)": {
            "details": "add admin",
            "params": {
              "account": "address to add"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isAdmin(address)": {
            "details": "whether admin",
            "params": {
              "account": "address to check"
            }
          },
          "removeAdmin(address)": {
            "details": "remove admin",
            "params": {
              "account": "address to remove"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferAdmin(address)": {
            "details": "transfer admin",
            "params": {
              "newAdmin": "new admin address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L2/L2FastWithdraw.sol": "L2FastWithdraw"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724",
        "urls": [
          "bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5",
          "dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/L2/L2FastWithdraw.sol": {
        "keccak256": "0xaa31fb79c3e9a04c339cb2ef220f3bb15df25ba5bfa7910d7216aaefe5317115",
        "urls": [
          "bzz-raw://08a274af190f420d3949f199b3e99b75ccac4ed3c29f4b10dcb72b4bc2b1b41a",
          "dweb:/ipfs/QmUUcMaXgY2Hf31qmRC4FDqhS4SU4QkXg19NmQUTHg9Eqj"
        ],
        "license": "Unlicense"
      },
      "src/L2/L2FastWithdrawStorage.sol": {
        "keccak256": "0xe46bacf3ff3fd1ca8ba75ca904f2bfc9b9975dffb4acb9403cf6d03758b3f80a",
        "urls": [
          "bzz-raw://13fe32311a1e1912c5566850a0773d460289eba3604444ac1679f67c3aa1c5a1",
          "dweb:/ipfs/QmbaYaGcER9Pjn8swPD4UeJf35ieHjxSzYSycbC35thV4A"
        ],
        "license": "Unlicense"
      },
      "src/common/AccessRoleCommon.sol": {
        "keccak256": "0xcdd2dcbdf96134ffff98d7637a8bb0efd18c03d7c4697e6a1da4157a6aec6293",
        "urls": [
          "bzz-raw://06e8d40177c57ad9b312c6e2ee0408bbc25f405f1b36056580949086e55a31c7",
          "dweb:/ipfs/QmZa1mxeGPcmSSxbJtvUTSFaYg3paAFhmmf9dZ44PRJN6J"
        ],
        "license": "MIT"
      },
      "src/common/AccessibleCommon.sol": {
        "keccak256": "0x5dc1423a2eae20cb7bd05da7ce63733489fbf58a9e7893039c2e88991c4c9760",
        "urls": [
          "bzz-raw://c0733e0099198bd28ec341c493f74ad29fb8673ee085e54902345ba1b7bb202a",
          "dweb:/ipfs/QmQwBksv4oCaThyoR7y1u8XZdyjhdZkAeD7gahfcig3Uvw"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x4dfcbed37adf9f54e4544d13382814f51c9ef5d52ca4277d2080f988857f3b23",
        "urls": [
          "bzz-raw://0d5912aefaae898fe23ca62fcacbe89a04ce456b06a13e735f8e6174ea3dd59e",
          "dweb:/ipfs/QmcmKRNAtnBVFADpf5mjuq6e6rLgYLjUMHaRkn3YY3mdtG"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeERC20.sol": {
        "keccak256": "0x778abe92595c692abcf3bec8b72f4491746626d1a057c76b97c8d1a7d759f7b0",
        "urls": [
          "bzz-raw://466b8a5fae532ca4fc34bff92b0f23f3abe6689f5dbbb1aeb6ef2351c00e1f54",
          "dweb:/ipfs/QmZr7LTTXLdDzfoAJtbKFfCDLmq4hX9r2dycDiEMdzk2Wk"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
      },
      {
        "astId": 1032,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "crossDomainMessenger",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1034,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "l1fastWithdrawContract",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1036,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "LEGACY_ERC20_ETH",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1038,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "LEGACY_l1token",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1040,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "salecount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1045,
        "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
        "label": "dealData",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(RequestData)1030_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)19_storage"
      },
      "t_mapping(t_uint256,t_struct(RequestData)1030_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData)",
        "numberOfBytes": "32",
        "value": "t_struct(RequestData)1030_storage"
      },
      "t_struct(RequestData)1030_storage": {
        "encoding": "inplace",
        "label": "struct L2FastWithdrawStorage.RequestData",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 1021,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "l2token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1023,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "requester",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1025,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "provider",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1027,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "totalAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1029,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "fwAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(RoleData)19_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 16,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 18,
            "contract": "src/L2/L2FastWithdraw.sol:L2FastWithdraw",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "details": "add admin",
        "params": {
          "account": "address to add"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isAdmin(address)": {
        "details": "whether admin",
        "params": {
          "account": "address to check"
        }
      },
      "removeAdmin(address)": {
        "details": "remove admin",
        "params": {
          "account": "address to remove"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferAdmin(address)": {
        "details": "transfer admin",
        "params": {
          "newAdmin": "new admin address"
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L2/L2FastWithdraw.sol",
    "id": 1018,
    "exportedSymbols": {
      "AccessibleCommon": [
        1160
      ],
      "IERC20": [
        1247
      ],
      "ILegacyMintableERC20": [
        1302
      ],
      "IOptimismMintableERC20": [
        1279
      ],
      "L2FastWithdraw": [
        1017
      ],
      "L2FastWithdrawStorage": [
        1046
      ],
      "SafeERC20": [
        1483
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4579:6",
    "nodes": [
      {
        "id": 678,
        "nodeType": "PragmaDirective",
        "src": "38:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 679,
        "nodeType": "ImportDirective",
        "src": "63:36:6",
        "nodes": [],
        "absolutePath": "src/libraries/SafeERC20.sol",
        "file": "../libraries/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1018,
        "sourceUnit": 1484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 681,
        "nodeType": "ImportDirective",
        "src": "101:66:6",
        "nodes": [],
        "absolutePath": "src/common/AccessibleCommon.sol",
        "file": "../common/AccessibleCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1018,
        "sourceUnit": 1161,
        "symbolAliases": [
          {
            "foreign": {
              "id": 680,
              "name": "AccessibleCommon",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1160,
              "src": "110:16:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 683,
        "nodeType": "ImportDirective",
        "src": "168:68:6",
        "nodes": [],
        "absolutePath": "src/L2/L2FastWithdrawStorage.sol",
        "file": "./L2FastWithdrawStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1018,
        "sourceUnit": 1047,
        "symbolAliases": [
          {
            "foreign": {
              "id": 682,
              "name": "L2FastWithdrawStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1046,
              "src": "177:21:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 686,
        "nodeType": "ImportDirective",
        "src": "237:104:6",
        "nodes": [],
        "absolutePath": "src/interfaces/IOptimismMintableERC20.sol",
        "file": "../interfaces/IOptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1018,
        "sourceUnit": 1303,
        "symbolAliases": [
          {
            "foreign": {
              "id": 684,
              "name": "IOptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1279,
              "src": "246:22:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 685,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1302,
              "src": "270:20:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1017,
        "nodeType": "ContractDefinition",
        "src": "377:4239:6",
        "nodes": [
          {
            "id": 694,
            "nodeType": "UsingForDirective",
            "src": "451:27:6",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 691,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1483,
              "src": "457:9:6"
            },
            "typeName": {
              "id": 693,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 692,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1247,
                "src": "471:6:6"
              },
              "referencedDeclaration": 1247,
              "src": "471:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1247",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 707,
            "nodeType": "ModifierDefinition",
            "src": "515:129:6",
            "nodes": [],
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "534:110:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "552:24:6",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 698,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "565:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "565:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 697,
                            "name": "_isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1016,
                            "src": "553:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "553:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c3246573a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20616e20454f41",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "578:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff2e021c71096db2ea13d011b3a0cb51708d7a45044fa0ed998fe18a338256bb",
                          "typeString": "literal_string \"L2FW: function can only be called from an EOA\""
                        },
                        "value": "L2FW: function can only be called from an EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff2e021c71096db2ea13d011b3a0cb51708d7a45044fa0ed998fe18a338256bb",
                          "typeString": "literal_string \"L2FW: function can only be called from an EOA\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "544:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "544:82:6"
                },
                {
                  "id": 705,
                  "nodeType": "PlaceholderStatement",
                  "src": "636:1:6"
                }
              ]
            },
            "name": "onlyEOA",
            "nameLocation": "524:7:6",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 735,
            "nodeType": "FunctionDefinition",
            "src": "682:372:6",
            "nodes": [],
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "861:193:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 718,
                      "name": "crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "871:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 719,
                      "name": "_crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "894:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "871:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "871:44:6"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 722,
                      "name": "l1fastWithdrawContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "925:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 723,
                      "name": "_l1fastWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "950:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "925:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "925:40:6"
                },
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 726,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "975:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 727,
                      "name": "_legacyERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "994:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "975:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "975:31:6"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 730,
                      "name": "LEGACY_l1token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "1016:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 731,
                      "name": "_l1legacyERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "1033:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1016:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:31:6"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "691:10:6",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "_crossDomainMessenger",
                  "nameLocation": "719:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "711:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "_l1fastWithdraw",
                  "nameLocation": "758:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "750:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "_legacyERC20",
                  "nameLocation": "791:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "783:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_l1legacyERC20",
                  "nameLocation": "821:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "813:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:140:6"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:0:6"
            },
            "scope": 1017,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 805,
            "nodeType": "FunctionDefinition",
            "src": "1603:864:6",
            "nodes": [],
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "1764:703:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "1901:11:6",
                    "subExpression": {
                      "id": 746,
                      "name": "salecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "1903:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:11:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 749,
                      "name": "_l2token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "1927:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 750,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "1939:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1927:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 786,
                    "nodeType": "Block",
                    "src": "2110:123:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 777,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2184:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2184:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 781,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2203:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_L2FastWithdraw_$1017",
                                    "typeString": "contract L2FastWithdraw"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_L2FastWithdraw_$1017",
                                    "typeString": "contract L2FastWithdraw"
                                  }
                                ],
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2195:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 779,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2195:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2195:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 783,
                              "name": "_totalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "2209:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 774,
                                  "name": "_l2token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 737,
                                  "src": "2161:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 773,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "2154:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1247_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2154:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1247",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1212,
                            "src": "2154:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "2154:68:6"
                      }
                    ]
                  },
                  "id": 787,
                  "nodeType": "IfStatement",
                  "src": "1923:310:6",
                  "trueBody": {
                    "id": 772,
                    "nodeType": "Block",
                    "src": "1957:147:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 753,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1979:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1979:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 755,
                                "name": "_totalAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "1992:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1979:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46573a206e6174697665544f4e206e65656420616d6f756e74",
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2006:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fedb6436c429df447014117e47f29430a64362403d11f8dc2ddf4c4d3c015ea",
                                "typeString": "literal_string \"FW: nativeTON need amount\""
                              },
                              "value": "FW: nativeTON need amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fedb6436c429df447014117e47f29430a64362403d11f8dc2ddf4c4d3c015ea",
                                "typeString": "literal_string \"FW: nativeTON need amount\""
                              }
                            ],
                            "id": 752,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1971:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1971:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "1971:63:6"
                      },
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 764,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2064:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_L2FastWithdraw_$1017",
                                        "typeString": "contract L2FastWithdraw"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_L2FastWithdraw_$1017",
                                        "typeString": "contract L2FastWithdraw"
                                      }
                                    ],
                                    "id": 763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2056:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 762,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2056:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2056:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2048:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 760,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2048:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2048:22:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2048:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 768,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2083:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2083:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2048:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "2048:45:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 788,
                        "name": "dealData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "2243:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                          "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                        }
                      },
                      "id": 790,
                      "indexExpression": {
                        "id": 789,
                        "name": "salecount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1040,
                        "src": "2252:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2243:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                        "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 792,
                          "name": "_l2token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "2300:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 793,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2333:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2333:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2375:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2367:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 795,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2367:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2367:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 799,
                          "name": "_totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "2404:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 800,
                          "name": "_fwAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 741,
                          "src": "2440:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 791,
                        "name": "RequestData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "2265:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RequestData_$1030_storage_ptr_$",
                          "typeString": "type(struct L2FastWithdrawStorage.RequestData storage pointer)"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "l2token",
                        "requester",
                        "provider",
                        "totalAmount",
                        "fwAmount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2265:195:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestData_$1030_memory_ptr",
                        "typeString": "struct L2FastWithdrawStorage.RequestData memory"
                      }
                    },
                    "src": "2243:217:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                      "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:217:6"
                }
              ]
            },
            "functionSelector": "01d0d815",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 743,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 707,
                  "src": "1752:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1752:7:6"
              }
            ],
            "name": "requestFW",
            "nameLocation": "1612:9:6",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_l2token",
                  "nameLocation": "1639:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "1631:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_totalAmount",
                  "nameLocation": "1665:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "1657:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "_fwAmount",
                  "nameLocation": "1695:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "1687:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:89:6"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:0:6"
            },
            "scope": 1017,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 894,
            "nodeType": "FunctionDefinition",
            "src": "2473:997:6",
            "nodes": [],
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "2630:840:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "dealData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "2700:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "_saleCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "2709:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2700:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                              "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requester",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1023,
                          "src": "2700:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 821,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 809,
                          "src": "2734:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2700:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d61746368207468652073656c6c6572",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2739:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8fbfab6abde233cbcdf88b3864da1ccd1721aca8c41fd7dc86708ee50987b25",
                          "typeString": "literal_string \"not match the seller\""
                        },
                        "value": "not match the seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8fbfab6abde233cbcdf88b3864da1ccd1721aca8c41fd7dc86708ee50987b25",
                          "typeString": "literal_string \"not match the seller\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2692:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "dealData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "2780:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "_saleCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "2789:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2780:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                              "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fwAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1029,
                          "src": "2780:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 831,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 811,
                          "src": "2813:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2780:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e65656420746f206f766572206d696e416d6f756e74",
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2822:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dd682d3ad295596e03a5e1b5705dba0053e5d9f883fdf759ddd9a036db17277",
                          "typeString": "literal_string \"need to over minAmount\""
                        },
                        "value": "need to over minAmount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dd682d3ad295596e03a5e1b5705dba0053e5d9f883fdf759ddd9a036db17277",
                          "typeString": "literal_string \"need to over minAmount\""
                        }
                      ],
                      "id": 826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2772:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2772:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "2772:75:6"
                },
                {
                  "expression": {
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 836,
                          "name": "dealData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2857:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                            "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                          }
                        },
                        "id": 838,
                        "indexExpression": {
                          "id": 837,
                          "name": "_saleCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "2866:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2857:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                          "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "provider",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1025,
                      "src": "2857:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 840,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "2889:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2857:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:37:6"
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 843,
                          "name": "dealData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2904:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                            "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                          }
                        },
                        "id": 845,
                        "indexExpression": {
                          "id": 844,
                          "name": "_saleCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "2913:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2904:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                          "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fwAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1029,
                      "src": "2904:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 847,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "2936:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2904:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "2904:39:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 850,
                          "name": "dealData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2957:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                            "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                          }
                        },
                        "id": 852,
                        "indexExpression": {
                          "id": 851,
                          "name": "_saleCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "2966:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2957:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                          "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                        }
                      },
                      "id": 853,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "l2token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1021,
                      "src": "2957:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 854,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "2989:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2957:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 891,
                    "nodeType": "Block",
                    "src": "3159:305:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 884,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "3414:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 885,
                                  "name": "dealData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "3420:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                    "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                  }
                                },
                                "id": 887,
                                "indexExpression": {
                                  "id": 886,
                                  "name": "_saleCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 813,
                                  "src": "3429:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3420:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                  "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                }
                              },
                              "id": 888,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1027,
                              "src": "3420:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 878,
                                      "name": "dealData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1045,
                                      "src": "3375:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                        "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                      }
                                    },
                                    "id": 880,
                                    "indexExpression": {
                                      "id": 879,
                                      "name": "_saleCount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "3384:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3375:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                      "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                    }
                                  },
                                  "id": 881,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "l2token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1021,
                                  "src": "3375:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 877,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "3368:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1247_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3368:36:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1247",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1183,
                            "src": "3368:45:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3368:85:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "3368:85:6"
                      }
                    ]
                  },
                  "id": 892,
                  "nodeType": "IfStatement",
                  "src": "2954:510:6",
                  "trueBody": {
                    "id": 876,
                    "nodeType": "Block",
                    "src": "3007:146:6",
                    "statements": [
                      {
                        "assignments": [
                          857,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 857,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "3027:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 876,
                            "src": "3022:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 856,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3022:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 870,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3098:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 860,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 807,
                                    "src": "3045:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 859,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3037:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 858,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3037:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3037:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3037:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 863,
                                    "name": "dealData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "3064:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                      "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                    }
                                  },
                                  "id": 865,
                                  "indexExpression": {
                                    "id": 864,
                                    "name": "_saleCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "3073:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3064:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                    "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1027,
                                "src": "3064:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3037:60:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3037:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3021:80:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 872,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "3123:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "636c61696d206661696c",
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3129:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_717cb9bd42d781c204a231b096b0db4b6af48f9ebed95cbe6abe46b7107fdda9",
                                "typeString": "literal_string \"claim fail\""
                              },
                              "value": "claim fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_717cb9bd42d781c204a231b096b0db4b6af48f9ebed95cbe6abe46b7107fdda9",
                                "typeString": "literal_string \"claim fail\""
                              }
                            ],
                            "id": 871,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3115:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3115:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 875,
                        "nodeType": "ExpressionStatement",
                        "src": "3115:27:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c97a7fdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFW",
            "nameLocation": "2482:7:6",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2507:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "2499:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2530:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "2522:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2551:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "2543:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "_saleCount",
                  "nameLocation": "2576:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "2568:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2489:103:6"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:6"
            },
            "scope": 1017,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 976,
            "nodeType": "FunctionDefinition",
            "src": "3476:667:6",
            "nodes": [],
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "3565:578:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 900,
                                "name": "dealData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "3583:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                  "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                }
                              },
                              "id": 902,
                              "indexExpression": {
                                "id": 901,
                                "name": "_salecount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "3592:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3583:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requester",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1023,
                            "src": "3583:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 904,
                                "name": "dealData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "3617:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                  "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                }
                              },
                              "id": 906,
                              "indexExpression": {
                                "id": 905,
                                "name": "_salecount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "3626:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3617:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                              }
                            },
                            "id": 907,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "provider",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1025,
                            "src": "3617:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3583:63:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 909,
                                "name": "dealData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "3650:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                  "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                }
                              },
                              "id": 911,
                              "indexExpression": {
                                "id": 910,
                                "name": "_salecount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "3659:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3650:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                              }
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fwAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1029,
                            "src": "3650:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3683:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3650:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3583:101:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c7265616479206265656e20736f6c64",
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3686:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd5d0f67c3beb8ad678356f7d2163051381df5f883d28276301a9932f1c1eb3a",
                          "typeString": "literal_string \"already been sold\""
                        },
                        "value": "already been sold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd5d0f67c3beb8ad678356f7d2163051381df5f883d28276301a9932f1c1eb3a",
                          "typeString": "literal_string \"already been sold\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3575:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:131:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:131:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 920,
                              "name": "dealData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "3724:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                              }
                            },
                            "id": 922,
                            "indexExpression": {
                              "id": 921,
                              "name": "_salecount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "3733:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3724:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                              "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requester",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1023,
                          "src": "3724:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 924,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3758:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3758:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3724:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7572206e6f742073656c6c6572",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3770:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cb81d22aebe85606103ee662c4d3724f20e214f430a6fdb81dbc2c99d13d923",
                          "typeString": "literal_string \"your not seller\""
                        },
                        "value": "your not seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cb81d22aebe85606103ee662c4d3724f20e214f430a6fdb81dbc2c99d13d923",
                          "typeString": "literal_string \"your not seller\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3716:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3716:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:72:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 930,
                          "name": "dealData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "3803:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                            "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                          }
                        },
                        "id": 932,
                        "indexExpression": {
                          "id": 931,
                          "name": "_salecount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "3812:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3803:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                          "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "l2token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1021,
                      "src": "3803:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 934,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "3835:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3803:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 973,
                    "nodeType": "Block",
                    "src": "4018:119:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 965,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4082:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4082:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 967,
                                  "name": "dealData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "4093:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                    "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                  }
                                },
                                "id": 969,
                                "indexExpression": {
                                  "id": 968,
                                  "name": "_salecount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 896,
                                  "src": "4102:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4093:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                  "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1027,
                              "src": "4093:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 959,
                                      "name": "dealData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1045,
                                      "src": "4039:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                        "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                      }
                                    },
                                    "id": 961,
                                    "indexExpression": {
                                      "id": 960,
                                      "name": "_salecount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 896,
                                      "src": "4048:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4039:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                      "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                    }
                                  },
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "l2token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1021,
                                  "src": "4039:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 958,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "4032:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1247_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4032:36:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1247",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1408,
                            "src": "4032:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1247_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1247_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4032:94:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 972,
                        "nodeType": "ExpressionStatement",
                        "src": "4032:94:6"
                      }
                    ]
                  },
                  "id": 974,
                  "nodeType": "IfStatement",
                  "src": "3799:338:6",
                  "trueBody": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "3853:159:6",
                    "statements": [
                      {
                        "assignments": [
                          937,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 937,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "3873:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 957,
                            "src": "3868:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 936,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3868:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 951,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3949:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 940,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3891:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3891:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3883:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 938,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3883:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3883:19:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3883:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 944,
                                    "name": "dealData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "3915:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RequestData_$1030_storage_$",
                                      "typeString": "mapping(uint256 => struct L2FastWithdrawStorage.RequestData storage ref)"
                                    }
                                  },
                                  "id": 946,
                                  "indexExpression": {
                                    "id": 945,
                                    "name": "_salecount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 896,
                                    "src": "3924:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3915:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RequestData_$1030_storage",
                                    "typeString": "struct L2FastWithdrawStorage.RequestData storage ref"
                                  }
                                },
                                "id": 947,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1027,
                                "src": "3915:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3883:65:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3883:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3867:85:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 953,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 937,
                              "src": "3974:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616e63656c20726566756e64206661696c",
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3980:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8210db588df4c6156a13f6e911ea2d754334809e06facb28b3a2cf75e80723b9",
                                "typeString": "literal_string \"cancel refund fail\""
                              },
                              "value": "cancel refund fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8210db588df4c6156a13f6e911ea2d754334809e06facb28b3a2cf75e80723b9",
                                "typeString": "literal_string \"cancel refund fail\""
                              }
                            ],
                            "id": 952,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3966:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3966:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 956,
                        "nodeType": "ExpressionStatement",
                        "src": "3966:35:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9beb4fe5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelFW",
            "nameLocation": "3485:8:6",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_salecount",
                  "nameLocation": "3511:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "3503:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:34:6"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:6"
            },
            "scope": 1017,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1002,
            "nodeType": "FunctionDefinition",
            "src": "4149:314:6",
            "nodes": [],
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "4269:194:6",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 983,
                      "name": "_l2token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "4283:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 984,
                      "name": "LEGACY_ERC20_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "4295:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4283:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "4375:82:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 991,
                            "name": "l1Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "4396:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 993,
                                    "name": "_l2token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 978,
                                    "src": "4427:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 992,
                                  "name": "ILegacyMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "4406:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$1302_$",
                                    "typeString": "type(contract ILegacyMintableERC20)"
                                  }
                                },
                                "id": 994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4406:30:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILegacyMintableERC20_$1302",
                                  "typeString": "contract ILegacyMintableERC20"
                                }
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "l1Token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1287,
                              "src": "4406:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4406:40:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4396:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 982,
                        "id": 998,
                        "nodeType": "Return",
                        "src": "4389:57:6"
                      }
                    ]
                  },
                  "id": 1000,
                  "nodeType": "IfStatement",
                  "src": "4279:178:6",
                  "trueBody": {
                    "id": 990,
                    "nodeType": "Block",
                    "src": "4313:56:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 986,
                            "name": "l1Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "4334:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 987,
                            "name": "LEGACY_l1token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "4344:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4334:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 982,
                        "id": 989,
                        "nodeType": "Return",
                        "src": "4327:31:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "62d1c976",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getL1token",
            "nameLocation": "4158:10:6",
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "_l2token",
                  "nameLocation": "4186:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4178:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4168:32:6"
            },
            "returnParameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "4256:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "4248:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4247:17:6"
            },
            "scope": 1017,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1016,
            "nodeType": "FunctionDefinition",
            "src": "4500:114:6",
            "nodes": [],
            "body": {
              "id": 1015,
              "nodeType": "Block",
              "src": "4567:47:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 1009,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "4584:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "4584:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4584:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4606:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4584:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1008,
                  "id": 1014,
                  "nodeType": "Return",
                  "src": "4577:30:6"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isContract",
            "nameLocation": "4509:11:6",
            "parameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4529:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "4521:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4521:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4520:17:6"
            },
            "returnParameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "4561:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4560:6:6"
            },
            "scope": 1017,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 687,
              "name": "AccessibleCommon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1160,
              "src": "404:16:6"
            },
            "id": 688,
            "nodeType": "InheritanceSpecifier",
            "src": "404:16:6"
          },
          {
            "baseName": {
              "id": 689,
              "name": "L2FastWithdrawStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1046,
              "src": "422:21:6"
            },
            "id": 690,
            "nodeType": "InheritanceSpecifier",
            "src": "422:21:6"
          }
        ],
        "canonicalName": "L2FastWithdraw",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1017,
          1046,
          1160,
          319,
          664,
          676,
          392,
          414,
          1059
        ],
        "name": "L2FastWithdraw",
        "nameLocation": "386:14:6",
        "scope": 1018,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 6
}